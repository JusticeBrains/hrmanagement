{
    "swagger": "2.0",
    "info": {
        "title": "HR Management API",
        "description": "Test description",
        "termsOfService": "https://www.google.com/policies/terms/",
        "contact": {
            "email": "contact@snippets.local"
        },
        "license": {
            "name": "BSD License"
        },
        "version": "v1"
    },
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        }
    },
    "security": [
        {
            "Basic": []
        }
    ],
    "paths": {
        "/company/applicationpool/": {
            "get": {
                "operationId": "company_applicationpool_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationPool"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_applicationpool_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/applicationpool/{id}/": {
            "get": {
                "operationId": "company_applicationpool_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_applicationpool_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_applicationpool_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationPool"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_applicationpool_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Application Pool.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/applicationqe/": {
            "get": {
                "operationId": "company_applicationqe_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationQE"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_applicationqe_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationQE"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationQE"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/applicationqe/{id}/": {
            "get": {
                "operationId": "company_applicationqe_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationQE"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_applicationqe_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationQE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationQE"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_applicationqe_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationQE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationQE"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_applicationqe_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Application Q&E.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/applicationreference/": {
            "get": {
                "operationId": "company_applicationreference_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_applicationreference_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/applicationreference/{id}/": {
            "get": {
                "operationId": "company_applicationreference_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_applicationreference_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_applicationreference_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationReferencesSeriailizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_applicationreference_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Application References.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/cashbenefitpayment/": {
            "get": {
                "operationId": "company_cashbenefitpayment_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_cashbenefitpayment_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/cashbenefitpayment/{id}/": {
            "get": {
                "operationId": "company_cashbenefitpayment_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_cashbenefitpayment_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_cashbenefitpayment_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CashBenefitPaymentSerilaizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_cashbenefitpayment_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Cash Benefit Payments.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/cbaissues/": {
            "get": {
                "operationId": "company_cbaissues_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CBAIssues"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_cbaissues_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CBAIssues"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CBAIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/cbaissues/{id}/": {
            "get": {
                "operationId": "company_cbaissues_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CBAIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_cbaissues_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CBAIssues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CBAIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_cbaissues_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CBAIssues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CBAIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_cbaissues_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this CBA Issues.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/collectivebargaining/": {
            "get": {
                "operationId": "company_collectivebargaining_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CollectiveBargaining"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_collectivebargaining_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectiveBargaining"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectiveBargaining"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/collectivebargaining/{id}/": {
            "get": {
                "operationId": "company_collectivebargaining_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectiveBargaining"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_collectivebargaining_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectiveBargaining"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectiveBargaining"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_collectivebargaining_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectiveBargaining"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectiveBargaining"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_collectivebargaining_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Collective Bargaining.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/company/": {
            "get": {
                "operationId": "company_company_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Company"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_company_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/company/{id}/": {
            "get": {
                "operationId": "company_company_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_company_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_company_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_company_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Company.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/companyfield/": {
            "get": {
                "operationId": "company_companyfield_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CompanyField"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_companyfield_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyField"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyField"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/companyfield/{id}/": {
            "get": {
                "operationId": "company_companyfield_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyField"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_companyfield_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyField"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_companyfield_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyField"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_companyfield_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Company Field.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/companystaffbreakdown/": {
            "get": {
                "operationId": "company_companystaffbreakdown_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CompanyStaffBreakdown"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_companystaffbreakdown_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyStaffBreakdown"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyStaffBreakdown"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/companystaffbreakdown/{id}/": {
            "get": {
                "operationId": "company_companystaffbreakdown_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyStaffBreakdown"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_companystaffbreakdown_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyStaffBreakdown"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyStaffBreakdown"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_companystaffbreakdown_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyStaffBreakdown"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyStaffBreakdown"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_companystaffbreakdown_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Company Staff Breakdown.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/companytype/": {
            "get": {
                "operationId": "company_companytype_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CompanyType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_companytype_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyType"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/companytype/{id}/": {
            "get": {
                "operationId": "company_companytype_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyType"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_companytype_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyType"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_companytype_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyType"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_companytype_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Company Type.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/couriercompanies/": {
            "get": {
                "operationId": "company_couriercompanies_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CourierCompaniesSerilizer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_couriercompanies_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourierCompaniesSerilizer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierCompaniesSerilizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/couriercompanies/{id}/": {
            "get": {
                "operationId": "company_couriercompanies_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierCompaniesSerilizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_couriercompanies_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourierCompaniesSerilizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierCompaniesSerilizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_couriercompanies_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourierCompaniesSerilizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierCompaniesSerilizer"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_couriercompanies_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Courier Companies.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/courierservicerequisition/": {
            "get": {
                "operationId": "company_courierservicerequisition_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CourierServiceRequisition"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_courierservicerequisition_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourierServiceRequisition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierServiceRequisition"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/courierservicerequisition/{id}/": {
            "get": {
                "operationId": "company_courierservicerequisition_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierServiceRequisition"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_courierservicerequisition_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourierServiceRequisition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierServiceRequisition"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_courierservicerequisition_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourierServiceRequisition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourierServiceRequisition"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_courierservicerequisition_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Courier Service Requistition.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/department/": {
            "get": {
                "operationId": "company_department_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Department"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_department_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/department/{id}/": {
            "get": {
                "operationId": "company_department_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_department_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_department_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_department_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Department.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/disciplinaryactions/": {
            "get": {
                "operationId": "company_disciplinaryactions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DisciplinaryActions"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_disciplinaryactions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DisciplinaryActions"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/disciplinaryactions/{id}/": {
            "get": {
                "operationId": "company_disciplinaryactions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_disciplinaryactions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DisciplinaryActions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_disciplinaryactions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DisciplinaryActions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_disciplinaryactions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Disciplinary Actions.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/endofserviceentry/": {
            "get": {
                "operationId": "company_endofserviceentry_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EndOfServiceEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_endofserviceentry_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EndOfServiceEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EndOfServiceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/endofserviceentry/{id}/": {
            "get": {
                "operationId": "company_endofserviceentry_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EndOfServiceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_endofserviceentry_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EndOfServiceEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EndOfServiceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_endofserviceentry_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EndOfServiceEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EndOfServiceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_endofserviceentry_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this End Of Service Entry.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/expatriates/": {
            "get": {
                "operationId": "company_expatriates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Expatriates"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_expatriates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Expatriates"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expatriates"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/expatriates/{id}/": {
            "get": {
                "operationId": "company_expatriates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expatriates"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_expatriates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Expatriates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expatriates"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_expatriates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Expatriates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expatriates"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_expatriates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Expatriates.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/expatriatesapplication/": {
            "get": {
                "operationId": "company_expatriatesapplication_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ExpatriatesApplication"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_expatriatesapplication_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExpatriatesApplication"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ExpatriatesApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/expatriatesapplication/{id}/": {
            "get": {
                "operationId": "company_expatriatesapplication_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ExpatriatesApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_expatriatesapplication_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExpatriatesApplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ExpatriatesApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_expatriatesapplication_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExpatriatesApplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ExpatriatesApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_expatriatesapplication_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Expatriate Application.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/grievancecommittemembers/": {
            "get": {
                "operationId": "company_grievancecommittemembers_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GrievanceCommitteeMembers"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_grievancecommittemembers_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceCommitteeMembers"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceCommitteeMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/grievancecommittemembers/{id}/": {
            "get": {
                "operationId": "company_grievancecommittemembers_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceCommitteeMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_grievancecommittemembers_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceCommitteeMembers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceCommitteeMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_grievancecommittemembers_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceCommitteeMembers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceCommitteeMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_grievancecommittemembers_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Grievance Committe Members.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/grievanceentry/": {
            "get": {
                "operationId": "company_grievanceentry_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GrievanceEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_grievanceentry_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/grievanceentry/{id}/": {
            "get": {
                "operationId": "company_grievanceentry_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_grievanceentry_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_grievanceentry_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_grievanceentry_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Grievance Entry.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/grievanceheader/": {
            "get": {
                "operationId": "company_grievanceheader_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GrievanceHeader"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_grievanceheader_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceHeader"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceHeader"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/grievanceheader/{id}/": {
            "get": {
                "operationId": "company_grievanceheader_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceHeader"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_grievanceheader_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceHeader"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceHeader"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_grievanceheader_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceHeader"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceHeader"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_grievanceheader_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Grievance Header.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/grievanceline/": {
            "get": {
                "operationId": "company_grievanceline_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GrievanceLine"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_grievanceline_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/grievanceline/{id}/": {
            "get": {
                "operationId": "company_grievanceline_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_grievanceline_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_grievanceline_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GrievanceLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GrievanceLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_grievanceline_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Grievance Line.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/holiday/": {
            "get": {
                "operationId": "company_holiday_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Holiday"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_holiday_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Holiday"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Holiday"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/holiday/{id}/": {
            "get": {
                "operationId": "company_holiday_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Holiday"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_holiday_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Holiday"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Holiday"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_holiday_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Holiday"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Holiday"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_holiday_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Holiday.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/hospitalityfacilities/": {
            "get": {
                "operationId": "company_hospitalityfacilities_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HospitalityFacilities"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_hospitalityfacilities_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HospitalityFacilities"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityFacilities"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/hospitalityfacilities/{id}/": {
            "get": {
                "operationId": "company_hospitalityfacilities_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityFacilities"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_hospitalityfacilities_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HospitalityFacilities"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityFacilities"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_hospitalityfacilities_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HospitalityFacilities"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityFacilities"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_hospitalityfacilities_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Hospitality Facilities.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/hospitalityservices/": {
            "get": {
                "operationId": "company_hospitalityservices_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HospitalityServices"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_hospitalityservices_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HospitalityServices"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityServices"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/hospitalityservices/{id}/": {
            "get": {
                "operationId": "company_hospitalityservices_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityServices"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_hospitalityservices_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HospitalityServices"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityServices"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_hospitalityservices_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HospitalityServices"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HospitalityServices"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_hospitalityservices_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Hospitality Services.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/hralerts/": {
            "get": {
                "operationId": "company_hralerts_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HRAlerts"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_hralerts_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRAlerts"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRAlerts"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/hralerts/{id}/": {
            "get": {
                "operationId": "company_hralerts_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRAlerts"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_hralerts_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRAlerts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRAlerts"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_hralerts_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRAlerts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRAlerts"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_hralerts_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this hr alerts.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/hrapprovalentry/": {
            "get": {
                "operationId": "company_hrapprovalentry_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HRApprovalEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_hrapprovalentry_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRApprovalEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRApprovalEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/hrapprovalentry/{id}/": {
            "get": {
                "operationId": "company_hrapprovalentry_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRApprovalEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_hrapprovalentry_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRApprovalEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRApprovalEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_hrapprovalentry_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRApprovalEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRApprovalEntry"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_hrapprovalentry_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this HR Approval Entry.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/hrneedsline/": {
            "get": {
                "operationId": "company_hrneedsline_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HRNeedsLine"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_hrneedsline_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRNeedsLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/hrneedsline/{id}/": {
            "get": {
                "operationId": "company_hrneedsline_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_hrneedsline_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRNeedsLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_hrneedsline_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRNeedsLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsLine"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_hrneedsline_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this HR Needs Line.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/hrneedssqef/": {
            "get": {
                "operationId": "company_hrneedssqef_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/HRNeedsSQEF"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_hrneedssqef_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRNeedsSQEF"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/hrneedssqef/{id}/": {
            "get": {
                "operationId": "company_hrneedssqef_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_hrneedssqef_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRNeedsSQEF"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_hrneedssqef_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HRNeedsSQEF"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HRNeedsSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_hrneedssqef_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this HR Needs SQEF.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/job/": {
            "get": {
                "operationId": "company_job_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Job"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_job_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/job/{id}/": {
            "get": {
                "operationId": "company_job_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_job_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_job_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_job_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/jobapplication/": {
            "get": {
                "operationId": "company_jobapplication_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobApplication"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_jobapplication_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobApplication"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/jobapplication/{id}/": {
            "get": {
                "operationId": "company_jobapplication_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_jobapplication_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobApplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_jobapplication_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobApplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_jobapplication_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Application.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/jobappplicationqualification/": {
            "get": {
                "operationId": "company_jobappplicationqualification_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobApplicationQualification"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_jobappplicationqualification_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobApplicationQualification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplicationQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/jobappplicationqualification/{id}/": {
            "get": {
                "operationId": "company_jobappplicationqualification_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplicationQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_jobappplicationqualification_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobApplicationQualification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplicationQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_jobappplicationqualification_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobApplicationQualification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobApplicationQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_jobappplicationqualification_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Application Qualification.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/jobopening/": {
            "get": {
                "operationId": "company_jobopening_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Job"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_jobopening_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/jobopening/{id}/": {
            "get": {
                "operationId": "company_jobopening_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_jobopening_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_jobopening_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_jobopening_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/medicalcentre/": {
            "get": {
                "operationId": "company_medicalcentre_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MedicalCentres"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_medicalcentre_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalCentres"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCentres"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/medicalcentre/{id}/": {
            "get": {
                "operationId": "company_medicalcentre_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCentres"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_medicalcentre_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalCentres"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCentres"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_medicalcentre_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalCentres"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCentres"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_medicalcentre_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Medical Centres.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/medicalcodes/": {
            "get": {
                "operationId": "company_medicalcodes_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MedicalCodes"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_medicalcodes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalCodes"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCodes"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/medicalcodes/{id}/": {
            "get": {
                "operationId": "company_medicalcodes_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCodes"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_medicalcodes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalCodes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCodes"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_medicalcodes_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalCodes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalCodes"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_medicalcodes_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Medical Codes.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/minimumqualification/": {
            "get": {
                "operationId": "company_minimumqualification_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MinimumQualification"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_minimumqualification_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MinimumQualification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MinimumQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/minimumqualification/{id}/": {
            "get": {
                "operationId": "company_minimumqualification_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MinimumQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_minimumqualification_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MinimumQualification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MinimumQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_minimumqualification_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MinimumQualification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MinimumQualification"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_minimumqualification_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Minimum Qualification.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/organizationstructure/": {
            "get": {
                "operationId": "company_organizationstructure_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrganizationStructure"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_organizationstructure_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationStructure"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizationStructure"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/organizationstructure/{id}/": {
            "get": {
                "operationId": "company_organizationstructure_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizationStructure"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_organizationstructure_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationStructure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizationStructure"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_organizationstructure_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizationStructure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizationStructure"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_organizationstructure_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Organizational Structure.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/passportissues/": {
            "get": {
                "operationId": "company_passportissues_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PassportIssues"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_passportissues_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PassportIssues"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PassportIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/passportissues/{id}/": {
            "get": {
                "operationId": "company_passportissues_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PassportIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_passportissues_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PassportIssues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PassportIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_passportissues_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PassportIssues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PassportIssues"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_passportissues_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Passport Issues.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/performanceoverview/": {
            "get": {
                "operationId": "company_performanceoverview_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PerformanceOverview"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_performanceoverview_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PerformanceOverview"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PerformanceOverview"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/performanceoverview/{id}/": {
            "get": {
                "operationId": "company_performanceoverview_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PerformanceOverview"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_performanceoverview_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PerformanceOverview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PerformanceOverview"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_performanceoverview_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PerformanceOverview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PerformanceOverview"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_performanceoverview_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Performance Overview.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/property/": {
            "get": {
                "operationId": "company_property_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Property"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_property_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Property"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Property"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/property/{id}/": {
            "get": {
                "operationId": "company_property_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Property"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_property_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Property"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Property"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_property_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Property"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Property"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_property_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Property.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/propertyassignment/": {
            "get": {
                "operationId": "company_propertyassignment_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PropertyAssignment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_propertyassignment_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PropertyAssignment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PropertyAssignment"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/propertyassignment/{id}/": {
            "get": {
                "operationId": "company_propertyassignment_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PropertyAssignment"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_propertyassignment_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PropertyAssignment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PropertyAssignment"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_propertyassignment_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PropertyAssignment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PropertyAssignment"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_propertyassignment_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Property Assignment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/qualificationmetricsqef/": {
            "get": {
                "operationId": "company_qualificationmetricsqef_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/QualificationMetricSQEF"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_qualificationmetricsqef_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QualificationMetricSQEF"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QualificationMetricSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/qualificationmetricsqef/{id}/": {
            "get": {
                "operationId": "company_qualificationmetricsqef_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QualificationMetricSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_qualificationmetricsqef_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QualificationMetricSQEF"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QualificationMetricSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_qualificationmetricsqef_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QualificationMetricSQEF"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QualificationMetricSQEF"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_qualificationmetricsqef_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Qualification Metric SQEF.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/shortlistedapplication/": {
            "get": {
                "operationId": "company_shortlistedapplication_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ShortListedApplication"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_shortlistedapplication_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShortListedApplication"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShortListedApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/shortlistedapplication/{id}/": {
            "get": {
                "operationId": "company_shortlistedapplication_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShortListedApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_shortlistedapplication_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShortListedApplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShortListedApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_shortlistedapplication_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShortListedApplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShortListedApplication"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_shortlistedapplication_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this ShortListed Application.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/sjncmembers/": {
            "get": {
                "operationId": "company_sjncmembers_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SJNCMembers"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_sjncmembers_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SJNCMembers"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SJNCMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/sjncmembers/{id}/": {
            "get": {
                "operationId": "company_sjncmembers_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SJNCMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_sjncmembers_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SJNCMembers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SJNCMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_sjncmembers_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SJNCMembers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SJNCMembers"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_sjncmembers_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this SJNC Members.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/travelexpenses/": {
            "get": {
                "operationId": "company_travelexpenses_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TravelExpenses"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_travelexpenses_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TravelExpenses"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelExpenses"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/travelexpenses/{id}/": {
            "get": {
                "operationId": "company_travelexpenses_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelExpenses"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_travelexpenses_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TravelExpenses"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelExpenses"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_travelexpenses_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TravelExpenses"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelExpenses"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_travelexpenses_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Travel Expenses.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/travels/": {
            "get": {
                "operationId": "company_travels_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Travels"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_travels_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Travels"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Travels"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/travels/{id}/": {
            "get": {
                "operationId": "company_travels_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Travels"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_travels_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Travels"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Travels"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_travels_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Travels"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Travels"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_travels_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Travels.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/company/workmencompensation/": {
            "get": {
                "operationId": "company_workmencompensation_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkmenCompensation"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "post": {
                "operationId": "company_workmencompensation_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkmenCompensation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkmenCompensation"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": []
        },
        "/company/workmencompensation/{id}/": {
            "get": {
                "operationId": "company_workmencompensation_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkmenCompensation"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "put": {
                "operationId": "company_workmencompensation_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkmenCompensation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkmenCompensation"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "patch": {
                "operationId": "company_workmencompensation_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkmenCompensation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkmenCompensation"
                        }
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "delete": {
                "operationId": "company_workmencompensation_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "company"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Workmen Compensation.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/dj-rest-auth/login/": {
            "post": {
                "operationId": "dj-rest-auth_login_create",
                "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "parameters": []
        },
        "/dj-rest-auth/logout/": {
            "get": {
                "operationId": "dj-rest-auth_logout_list",
                "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
                "description": "Accepts/Returns nothing.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "post": {
                "operationId": "dj-rest-auth_logout_create",
                "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.",
                "description": "Accepts/Returns nothing.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "parameters": []
        },
        "/dj-rest-auth/password/change/": {
            "post": {
                "operationId": "dj-rest-auth_password_change_create",
                "summary": "Calls Django Auth SetPasswordForm save method.",
                "description": "Accepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "parameters": []
        },
        "/dj-rest-auth/password/reset/": {
            "post": {
                "operationId": "dj-rest-auth_password_reset_create",
                "summary": "Calls Django Auth PasswordResetForm save method.",
                "description": "Accepts the following POST parameters: email\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordReset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordReset"
                        }
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "parameters": []
        },
        "/dj-rest-auth/password/reset/confirm/": {
            "post": {
                "operationId": "dj-rest-auth_password_reset_confirm_create",
                "summary": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.",
                "description": "Accepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordResetConfirm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PasswordResetConfirm"
                        }
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "parameters": []
        },
        "/dj-rest-auth/user/": {
            "get": {
                "operationId": "dj-rest-auth_user_read",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "put": {
                "operationId": "dj-rest-auth_user_update",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "patch": {
                "operationId": "dj-rest-auth_user_partial_update",
                "summary": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.",
                "description": "Default accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                },
                "tags": [
                    "dj-rest-auth"
                ]
            },
            "parameters": []
        },
        "/employee/appraisalareas/": {
            "get": {
                "operationId": "employee_appraisalareas_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AppraisalArea"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_appraisalareas_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppraisalArea"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AppraisalArea"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/appraisalareas/{id}/": {
            "get": {
                "operationId": "employee_appraisalareas_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AppraisalArea"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_appraisalareas_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppraisalArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AppraisalArea"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_appraisalareas_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppraisalArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AppraisalArea"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_appraisalareas_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Appraisal Areas.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employee/": {
            "get": {
                "operationId": "employee_employee_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Employee"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employee_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employee/{id}/": {
            "get": {
                "operationId": "employee_employee_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employee_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employee_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employee_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employeeappraisal/": {
            "get": {
                "operationId": "employee_employeeappraisal_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmployeeAppraisal"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employeeappraisal_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisal"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employeeappraisal/{id}/": {
            "get": {
                "operationId": "employee_employeeappraisal_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisal"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employeeappraisal_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisal"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employeeappraisal_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisal"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employeeappraisal_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee Appraisal.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employeeappraisalresponse/": {
            "get": {
                "operationId": "employee_employeeappraisalresponse_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmployeeAppraisalResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employeeappraisalresponse_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisalResponse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisalResponse"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employeeappraisalresponse/{id}/": {
            "get": {
                "operationId": "employee_employeeappraisalresponse_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisalResponse"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employeeappraisalresponse_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisalResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisalResponse"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employeeappraisalresponse_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisalResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAppraisalResponse"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employeeappraisalresponse_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee Appraisal Response.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employeedisciplinaryactions/": {
            "get": {
                "operationId": "employee_employeedisciplinaryactions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmployeeDisciplinaryActions"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employeedisciplinaryactions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeDisciplinaryActions"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeDisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employeedisciplinaryactions/{id}/": {
            "get": {
                "operationId": "employee_employeedisciplinaryactions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeDisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employeedisciplinaryactions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeDisciplinaryActions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeDisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employeedisciplinaryactions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeDisciplinaryActions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeDisciplinaryActions"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employeedisciplinaryactions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee Disciplinary Actions.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employeemedical/": {
            "get": {
                "operationId": "employee_employeemedical_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmployeeMedical"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employeemedical_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeMedical"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeMedical"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employeemedical/{id}/": {
            "get": {
                "operationId": "employee_employeemedical_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeMedical"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employeemedical_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeMedical"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeMedical"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employeemedical_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeeMedical"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeeMedical"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employeemedical_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee Medicals.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employeepayreview/": {
            "get": {
                "operationId": "employee_employeepayreview_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmployeePayReview"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employeepayreview_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePayReview"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePayReview"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employeepayreview/{id}/": {
            "get": {
                "operationId": "employee_employeepayreview_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePayReview"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employeepayreview_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePayReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePayReview"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employeepayreview_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePayReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePayReview"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employeepayreview_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee Pay Review.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employeepolicy/": {
            "get": {
                "operationId": "employee_employeepolicy_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmployeePolicy"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employeepolicy_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePolicy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePolicy"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employeepolicy/{id}/": {
            "get": {
                "operationId": "employee_employeepolicy_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePolicy"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employeepolicy_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePolicy"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employeepolicy_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePolicy"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employeepolicy_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee Policy.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/employee/employeepromotion/": {
            "get": {
                "operationId": "employee_employeepromotion_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmployeePromotion"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "post": {
                "operationId": "employee_employeepromotion_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePromotion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePromotion"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": []
        },
        "/employee/employeepromotion/{id}/": {
            "get": {
                "operationId": "employee_employeepromotion_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePromotion"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "put": {
                "operationId": "employee_employeepromotion_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePromotion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePromotion"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "patch": {
                "operationId": "employee_employeepromotion_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EmployeePromotion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmployeePromotion"
                        }
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "delete": {
                "operationId": "employee_employeepromotion_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "employee"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Employee Promotion.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/insuranceapp/groupinsurancebeneficiaries/": {
            "get": {
                "operationId": "insuranceapp_groupinsurancebeneficiaries_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "post": {
                "operationId": "insuranceapp_groupinsurancebeneficiaries_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": []
        },
        "/insuranceapp/groupinsurancebeneficiaries/{id}/": {
            "get": {
                "operationId": "insuranceapp_groupinsurancebeneficiaries_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "put": {
                "operationId": "insuranceapp_groupinsurancebeneficiaries_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "patch": {
                "operationId": "insuranceapp_groupinsurancebeneficiaries_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupInsuranceBeneficiaries"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "delete": {
                "operationId": "insuranceapp_groupinsurancebeneficiaries_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Group Insurance Beneficiaries.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/insuranceapp/grouplifeinsurance/": {
            "get": {
                "operationId": "insuranceapp_grouplifeinsurance_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GroupLifeInsurance"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "post": {
                "operationId": "insuranceapp_grouplifeinsurance_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupLifeInsurance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupLifeInsurance"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": []
        },
        "/insuranceapp/grouplifeinsurance/{id}/": {
            "get": {
                "operationId": "insuranceapp_grouplifeinsurance_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupLifeInsurance"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "put": {
                "operationId": "insuranceapp_grouplifeinsurance_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupLifeInsurance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupLifeInsurance"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "patch": {
                "operationId": "insuranceapp_grouplifeinsurance_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupLifeInsurance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroupLifeInsurance"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "delete": {
                "operationId": "insuranceapp_grouplifeinsurance_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Group Life Insurance.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/insuranceapp/insurancepremiumpayment/": {
            "get": {
                "operationId": "insuranceapp_insurancepremiumpayment_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InsurancePremiumPayments"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "post": {
                "operationId": "insuranceapp_insurancepremiumpayment_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InsurancePremiumPayments"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InsurancePremiumPayments"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": []
        },
        "/insuranceapp/insurancepremiumpayment/{id}/": {
            "get": {
                "operationId": "insuranceapp_insurancepremiumpayment_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InsurancePremiumPayments"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "put": {
                "operationId": "insuranceapp_insurancepremiumpayment_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InsurancePremiumPayments"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InsurancePremiumPayments"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "patch": {
                "operationId": "insuranceapp_insurancepremiumpayment_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InsurancePremiumPayments"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InsurancePremiumPayments"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "delete": {
                "operationId": "insuranceapp_insurancepremiumpayment_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Insurance Premium Payments.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/insuranceapp/travelinsuranceentry/": {
            "get": {
                "operationId": "insuranceapp_travelinsuranceentry_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TravelInsuranceEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "post": {
                "operationId": "insuranceapp_travelinsuranceentry_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TravelInsuranceEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelInsuranceEntry"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": []
        },
        "/insuranceapp/travelinsuranceentry/{id}/": {
            "get": {
                "operationId": "insuranceapp_travelinsuranceentry_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelInsuranceEntry"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "put": {
                "operationId": "insuranceapp_travelinsuranceentry_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TravelInsuranceEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelInsuranceEntry"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "patch": {
                "operationId": "insuranceapp_travelinsuranceentry_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TravelInsuranceEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TravelInsuranceEntry"
                        }
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "delete": {
                "operationId": "insuranceapp_travelinsuranceentry_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "insuranceapp"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Travel Insurance Entry.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/interviewapplication/applicationmedicaltest/": {
            "get": {
                "operationId": "interviewapplication_applicationmedicaltest_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ApplicationMedicalTest"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "post": {
                "operationId": "interviewapplication_applicationmedicaltest_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationMedicalTest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationMedicalTest"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": []
        },
        "/interviewapplication/applicationmedicaltest/{id}/": {
            "get": {
                "operationId": "interviewapplication_applicationmedicaltest_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationMedicalTest"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "put": {
                "operationId": "interviewapplication_applicationmedicaltest_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationMedicalTest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationMedicalTest"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "patch": {
                "operationId": "interviewapplication_applicationmedicaltest_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationMedicalTest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ApplicationMedicalTest"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "delete": {
                "operationId": "interviewapplication_applicationmedicaltest_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Applicant Medical Test.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/interviewapplication/interviewpanel/": {
            "get": {
                "operationId": "interviewapplication_interviewpanel_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InterviewPanel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "post": {
                "operationId": "interviewapplication_interviewpanel_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewPanel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewPanel"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": []
        },
        "/interviewapplication/interviewpanel/{id}/": {
            "get": {
                "operationId": "interviewapplication_interviewpanel_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewPanel"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "put": {
                "operationId": "interviewapplication_interviewpanel_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewPanel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewPanel"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "patch": {
                "operationId": "interviewapplication_interviewpanel_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewPanel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewPanel"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "delete": {
                "operationId": "interviewapplication_interviewpanel_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Interview Panel.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/interviewapplication/interviewscoreguide/": {
            "get": {
                "operationId": "interviewapplication_interviewscoreguide_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InterviewScore"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "post": {
                "operationId": "interviewapplication_interviewscoreguide_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": []
        },
        "/interviewapplication/interviewscoreguide/{id}/": {
            "get": {
                "operationId": "interviewapplication_interviewscoreguide_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "put": {
                "operationId": "interviewapplication_interviewscoreguide_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "patch": {
                "operationId": "interviewapplication_interviewscoreguide_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "delete": {
                "operationId": "interviewapplication_interviewscoreguide_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Interview / Test Score.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/interviewapplication/interviewtestquestionnaire/": {
            "get": {
                "operationId": "interviewapplication_interviewtestquestionnaire_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InterviewScore"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "post": {
                "operationId": "interviewapplication_interviewtestquestionnaire_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": []
        },
        "/interviewapplication/interviewtestquestionnaire/{id}/": {
            "get": {
                "operationId": "interviewapplication_interviewtestquestionnaire_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "put": {
                "operationId": "interviewapplication_interviewtestquestionnaire_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "patch": {
                "operationId": "interviewapplication_interviewtestquestionnaire_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InterviewScore"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "delete": {
                "operationId": "interviewapplication_interviewtestquestionnaire_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Interview/Test Questionnaire.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/interviewapplication/medicalquestionnaire/": {
            "get": {
                "operationId": "interviewapplication_medicalquestionnaire_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MedicalQuestionnaire"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "post": {
                "operationId": "interviewapplication_medicalquestionnaire_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalQuestionnaire"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalQuestionnaire"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": []
        },
        "/interviewapplication/medicalquestionnaire/{id}/": {
            "get": {
                "operationId": "interviewapplication_medicalquestionnaire_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalQuestionnaire"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "put": {
                "operationId": "interviewapplication_medicalquestionnaire_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalQuestionnaire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalQuestionnaire"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "patch": {
                "operationId": "interviewapplication_medicalquestionnaire_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MedicalQuestionnaire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MedicalQuestionnaire"
                        }
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "delete": {
                "operationId": "interviewapplication_medicalquestionnaire_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "interviewapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Medical Questionnaire.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobanalysis/": {
            "get": {
                "operationId": "jobanalysis_jobanalysis_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysis"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobanalysis_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysis"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysis"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobanalysis/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobanalysis_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysis"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobanalysis_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysis"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysis"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobanalysis_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysis"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysis"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobanalysis_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobanalysisauthoritylimit/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisauthoritylimit_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobanalysisauthoritylimit_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobanalysisauthoritylimit/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisauthoritylimit_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobanalysisauthoritylimit_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobanalysisauthoritylimit_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisAuthorityuLimit"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobanalysisauthoritylimit_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis Authority Limit.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobanalysiscontact/": {
            "get": {
                "operationId": "jobanalysis_jobanalysiscontact_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysisContact"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobanalysiscontact_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisContact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisContact"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobanalysiscontact/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobanalysiscontact_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisContact"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobanalysiscontact_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisContact"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobanalysiscontact_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisContact"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobanalysiscontact_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis Contact.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobanalysisdemand/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisdemand_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysisDemand"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobanalysisdemand_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDemand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDemand"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobanalysisdemand/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisdemand_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDemand"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobanalysisdemand_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDemand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDemand"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobanalysisdemand_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDemand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDemand"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobanalysisdemand_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis Demand.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobanalysisduties/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisduties_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysisDuties"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobanalysisduties_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDuties"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDuties"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobanalysisduties/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisduties_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDuties"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobanalysisduties_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDuties"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDuties"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobanalysisduties_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDuties"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisDuties"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobanalysisduties_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis Duties.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobanalysisrequirement/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisrequirement_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysisRequirement"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobanalysisrequirement_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobanalysisrequirement/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobanalysisrequirement_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobanalysisrequirement_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobanalysisrequirement_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobanalysisrequirement_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis Requirement.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobanalysissupervision/": {
            "get": {
                "operationId": "jobanalysis_jobanalysissupervision_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysisSupervision"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobanalysissupervision_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisSupervision"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisSupervision"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobanalysissupervision/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobanalysissupervision_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisSupervision"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobanalysissupervision_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisSupervision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisSupervision"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobanalysissupervision_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisSupervision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisSupervision"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobanalysissupervision_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis Supervision.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobevaluation/": {
            "get": {
                "operationId": "jobanalysis_jobevaluation_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobEvaluation"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobevaluation_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobEvaluation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobEvaluation"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobevaluation/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobevaluation_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobEvaluation"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobevaluation_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobEvaluation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobEvaluation"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobevaluation_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobEvaluation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobEvaluation"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobevaluation_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Evaluation.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobanalysis/jobrequirements/": {
            "get": {
                "operationId": "jobanalysis_jobrequirements_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/JobAnalysisRequirement"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "post": {
                "operationId": "jobanalysis_jobrequirements_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": []
        },
        "/jobanalysis/jobrequirements/{id}/": {
            "get": {
                "operationId": "jobanalysis_jobrequirements_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "put": {
                "operationId": "jobanalysis_jobrequirements_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "patch": {
                "operationId": "jobanalysis_jobrequirements_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JobAnalysisRequirement"
                        }
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "delete": {
                "operationId": "jobanalysis_jobrequirements_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "jobanalysis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Job Analysis Requirement.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/leave/assignment/": {
            "get": {
                "operationId": "leave_assignment_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Assignment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "post": {
                "operationId": "leave_assignment_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Assignment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Assignment"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": []
        },
        "/leave/assignment/{id}/": {
            "get": {
                "operationId": "leave_assignment_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Assignment"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "put": {
                "operationId": "leave_assignment_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Assignment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Assignment"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "patch": {
                "operationId": "leave_assignment_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Assignment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Assignment"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "delete": {
                "operationId": "leave_assignment_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Assignment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/leave/leave-plan/": {
            "get": {
                "operationId": "leave_leave-plan_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LeavePlan"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "post": {
                "operationId": "leave_leave-plan_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeavePlan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeavePlan"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": []
        },
        "/leave/leave-plan/{id}/": {
            "get": {
                "operationId": "leave_leave-plan_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeavePlan"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "put": {
                "operationId": "leave_leave-plan_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeavePlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeavePlan"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "patch": {
                "operationId": "leave_leave-plan_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeavePlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeavePlan"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "delete": {
                "operationId": "leave_leave-plan_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Leave Plan.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/leave/leaverequest/": {
            "get": {
                "operationId": "leave_leaverequest_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LeaveRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "post": {
                "operationId": "leave_leaverequest_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeaveRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveRequest"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": []
        },
        "/leave/leaverequest/{id}/": {
            "get": {
                "operationId": "leave_leaverequest_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveRequest"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "put": {
                "operationId": "leave_leaverequest_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveRequest"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "patch": {
                "operationId": "leave_leaverequest_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveRequest"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "delete": {
                "operationId": "leave_leaverequest_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Leave Request.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/leave/leavetransaction/": {
            "get": {
                "operationId": "leave_leavetransaction_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LeaveTransaction"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "post": {
                "operationId": "leave_leavetransaction_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeaveTransaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveTransaction"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": []
        },
        "/leave/leavetransaction/{id}/": {
            "get": {
                "operationId": "leave_leavetransaction_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveTransaction"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "put": {
                "operationId": "leave_leavetransaction_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeaveTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveTransaction"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "patch": {
                "operationId": "leave_leavetransaction_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LeaveTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LeaveTransaction"
                        }
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "delete": {
                "operationId": "leave_leavetransaction_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "leave"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Leave Transaction.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/objectivesapplication/cooperateobjective/": {
            "get": {
                "operationId": "objectivesapplication_cooperateobjective_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CooperateObjectives"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "post": {
                "operationId": "objectivesapplication_cooperateobjective_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CooperateObjectives"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CooperateObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": []
        },
        "/objectivesapplication/cooperateobjective/{id}/": {
            "get": {
                "operationId": "objectivesapplication_cooperateobjective_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CooperateObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "put": {
                "operationId": "objectivesapplication_cooperateobjective_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CooperateObjectives"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CooperateObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "patch": {
                "operationId": "objectivesapplication_cooperateobjective_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CooperateObjectives"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CooperateObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "delete": {
                "operationId": "objectivesapplication_cooperateobjective_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Cooperate Objectives.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/objectivesapplication/corporatevalue/": {
            "get": {
                "operationId": "objectivesapplication_corporatevalue_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CorporateValues"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "post": {
                "operationId": "objectivesapplication_corporatevalue_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CorporateValues"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CorporateValues"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": []
        },
        "/objectivesapplication/corporatevalue/{id}/": {
            "get": {
                "operationId": "objectivesapplication_corporatevalue_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CorporateValues"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "put": {
                "operationId": "objectivesapplication_corporatevalue_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CorporateValues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CorporateValues"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "patch": {
                "operationId": "objectivesapplication_corporatevalue_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CorporateValues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CorporateValues"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "delete": {
                "operationId": "objectivesapplication_corporatevalue_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Corporate Values.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/objectivesapplication/departmentobjective/": {
            "get": {
                "operationId": "objectivesapplication_departmentobjective_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DepartmentObjectives"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "post": {
                "operationId": "objectivesapplication_departmentobjective_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DepartmentObjectives"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DepartmentObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": []
        },
        "/objectivesapplication/departmentobjective/{id}/": {
            "get": {
                "operationId": "objectivesapplication_departmentobjective_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DepartmentObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "put": {
                "operationId": "objectivesapplication_departmentobjective_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DepartmentObjectives"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DepartmentObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "patch": {
                "operationId": "objectivesapplication_departmentobjective_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DepartmentObjectives"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DepartmentObjectives"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "delete": {
                "operationId": "objectivesapplication_departmentobjective_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Departmental Objectives.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/objectivesapplication/individualobjectiveline/": {
            "get": {
                "operationId": "objectivesapplication_individualobjectiveline_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IndividualObjectiveLines"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "post": {
                "operationId": "objectivesapplication_individualobjectiveline_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveLines"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveLines"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": []
        },
        "/objectivesapplication/individualobjectiveline/{id}/": {
            "get": {
                "operationId": "objectivesapplication_individualobjectiveline_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveLines"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "put": {
                "operationId": "objectivesapplication_individualobjectiveline_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveLines"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveLines"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "patch": {
                "operationId": "objectivesapplication_individualobjectiveline_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveLines"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveLines"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "delete": {
                "operationId": "objectivesapplication_individualobjectiveline_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Individual Objective Lines.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/objectivesapplication/individualobjectivereview/": {
            "get": {
                "operationId": "objectivesapplication_individualobjectivereview_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IndividualObjectiveReview"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "post": {
                "operationId": "objectivesapplication_individualobjectivereview_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveReview"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveReview"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": []
        },
        "/objectivesapplication/individualobjectivereview/{id}/": {
            "get": {
                "operationId": "objectivesapplication_individualobjectivereview_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveReview"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "put": {
                "operationId": "objectivesapplication_individualobjectivereview_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveReview"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "patch": {
                "operationId": "objectivesapplication_individualobjectivereview_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveReview"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "delete": {
                "operationId": "objectivesapplication_individualobjectivereview_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Individual Objective Review.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/objectivesapplication/individualobjectivesetting/": {
            "get": {
                "operationId": "objectivesapplication_individualobjectivesetting_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IndividualObjectiveSetting"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "post": {
                "operationId": "objectivesapplication_individualobjectivesetting_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveSetting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveSetting"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": []
        },
        "/objectivesapplication/individualobjectivesetting/{id}/": {
            "get": {
                "operationId": "objectivesapplication_individualobjectivesetting_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveSetting"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "put": {
                "operationId": "objectivesapplication_individualobjectivesetting_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveSetting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveSetting"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "patch": {
                "operationId": "objectivesapplication_individualobjectivesetting_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveSetting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndividualObjectiveSetting"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "delete": {
                "operationId": "objectivesapplication_individualobjectivesetting_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Individual Objective Setting.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/objectivesapplication/objectivereviewline/": {
            "get": {
                "operationId": "objectivesapplication_objectivereviewline_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "post": {
                "operationId": "objectivesapplication_objectivereviewline_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": []
        },
        "/objectivesapplication/objectivereviewline/{id}/": {
            "get": {
                "operationId": "objectivesapplication_objectivereviewline_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "put": {
                "operationId": "objectivesapplication_objectivereviewline_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "patch": {
                "operationId": "objectivesapplication_objectivereviewline_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ObjectiveReviewLinesSerilizer"
                        }
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "delete": {
                "operationId": "objectivesapplication_objectivereviewline_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objectivesapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Objective Review Lines.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/paygroup/paygroup/": {
            "get": {
                "operationId": "paygroup_paygroup_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PayGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "paygroup"
                ]
            },
            "post": {
                "operationId": "paygroup_paygroup_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayGroup"
                        }
                    }
                },
                "tags": [
                    "paygroup"
                ]
            },
            "parameters": []
        },
        "/paygroup/paygroup/{id}/": {
            "get": {
                "operationId": "paygroup_paygroup_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayGroup"
                        }
                    }
                },
                "tags": [
                    "paygroup"
                ]
            },
            "put": {
                "operationId": "paygroup_paygroup_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayGroup"
                        }
                    }
                },
                "tags": [
                    "paygroup"
                ]
            },
            "patch": {
                "operationId": "paygroup_paygroup_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayGroup"
                        }
                    }
                },
                "tags": [
                    "paygroup"
                ]
            },
            "delete": {
                "operationId": "paygroup_paygroup_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "paygroup"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this pay group.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/budget/": {
            "get": {
                "operationId": "trainingapplication_budget_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Budget"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_budget_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Budget"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Budget"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/budget/{id}/": {
            "get": {
                "operationId": "trainingapplication_budget_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Budget"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_budget_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Budget"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Budget"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_budget_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Budget"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Budget"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_budget_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Budget.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/course/": {
            "get": {
                "operationId": "trainingapplication_course_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Course"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_course_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/course/{id}/": {
            "get": {
                "operationId": "trainingapplication_course_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_course_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_course_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Course"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_course_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Course.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/coursedetail/": {
            "get": {
                "operationId": "trainingapplication_coursedetail_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CourseDetail"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_coursedetail_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourseDetail"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/coursedetail/{id}/": {
            "get": {
                "operationId": "trainingapplication_coursedetail_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourseDetail"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_coursedetail_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourseDetail"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_coursedetail_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CourseDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CourseDetail"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_coursedetail_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Course Detail.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/expense/": {
            "get": {
                "operationId": "trainingapplication_expense_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Expense"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_expense_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Expense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expense"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/expense/{id}/": {
            "get": {
                "operationId": "trainingapplication_expense_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expense"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_expense_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Expense"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expense"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_expense_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Expense"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Expense"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_expense_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Expense.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/feedback/": {
            "get": {
                "operationId": "trainingapplication_feedback_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Feedback"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_feedback_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/feedback/{id}/": {
            "get": {
                "operationId": "trainingapplication_feedback_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_feedback_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_feedback_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Feedback"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_feedback_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Feedback.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/organizers/": {
            "get": {
                "operationId": "trainingapplication_organizers_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrganizerSerailizer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_organizers_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizerSerailizer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizerSerailizer"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/organizers/{id}/": {
            "get": {
                "operationId": "trainingapplication_organizers_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizerSerailizer"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_organizers_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizerSerailizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizerSerailizer"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_organizers_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganizerSerailizer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganizerSerailizer"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_organizers_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Organizers.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/participants/": {
            "get": {
                "operationId": "trainingapplication_participants_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Participants"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_participants_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Participants"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Participants"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/participants/{id}/": {
            "get": {
                "operationId": "trainingapplication_participants_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Participants"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_participants_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Participants"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Participants"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_participants_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Participants"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Participants"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_participants_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Feddback.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/plan/": {
            "get": {
                "operationId": "trainingapplication_plan_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Plan"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_plan_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/plan/{id}/": {
            "get": {
                "operationId": "trainingapplication_plan_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_plan_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_plan_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_plan_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Plan.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trainingapplication/request/": {
            "get": {
                "operationId": "trainingapplication_request_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Request"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "post": {
                "operationId": "trainingapplication_request_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": []
        },
        "/trainingapplication/request/{id}/": {
            "get": {
                "operationId": "trainingapplication_request_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "put": {
                "operationId": "trainingapplication_request_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "patch": {
                "operationId": "trainingapplication_request_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "delete": {
                "operationId": "trainingapplication_request_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trainingapplication"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Request.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/": {
            "get": {
                "operationId": "users_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/{id}/": {
            "get": {
                "operationId": "users_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this User.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "ApplicationPool": {
            "required": [
                "entry_no",
                "firstname",
                "middlename",
                "lastname",
                "title",
                "address",
                "phone_no",
                "email",
                "sex",
                "referred_from",
                "referred_to",
                "reference_no",
                "category",
                "posted",
                "archived",
                "position",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "firstname": {
                    "title": "Firstname",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "middlename": {
                    "title": "Middlename",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "lastname": {
                    "title": "LastName",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "enum": [
                        "MR.",
                        "MISS.",
                        "MRS.",
                        "DR.",
                        "PROF."
                    ]
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address2": {
                    "title": "Address2",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "phone_no": {
                    "title": "Mobile Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "dob": {
                    "title": "Date Of Birth",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "sex": {
                    "title": "Sex",
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ]
                },
                "date_received": {
                    "title": "Date Received",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "referred_from": {
                    "title": "Referred From",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "referred_to": {
                    "title": "Referred To",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "reference_no": {
                    "title": "Reference No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "archived": {
                    "title": "Archieved",
                    "type": "boolean"
                },
                "date_archieved": {
                    "title": "Date Archieved",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "position": {
                    "title": "Position",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "ApplicationQE": {
            "required": [
                "application_no",
                "entry_no",
                "entry_type",
                "institution",
                "programme_of_study",
                "year_of_completion",
                "place_of_work",
                "position",
                "job_title",
                "duties",
                "work_duration"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "application_no": {
                    "title": "Application No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "entry_no": {
                    "title": "Entry No",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "entry_type": {
                    "title": "Entry Type",
                    "type": "string",
                    "enum": [
                        "SKILLS",
                        "QUALIFICATION",
                        "EXPERIENCE"
                    ]
                },
                "institution": {
                    "title": "Institution",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "programme_of_study": {
                    "title": "Programme Of Study",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "year_of_completion": {
                    "title": "Year Of Completion",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "place_of_work": {
                    "title": "Place Of Work",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "position": {
                    "title": "Position",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "duties": {
                    "title": "Duties",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "work_duration": {
                    "title": "Work Duration",
                    "type": "string",
                    "format": "decimal"
                }
            }
        },
        "ApplicationReferencesSeriailizer": {
            "required": [
                "publication_no",
                "entry_no",
                "line_no",
                "name_of_referee",
                "place_of_work",
                "job_title",
                "reference_supoort"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "publication_no": {
                    "title": "Publication No",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "line_no": {
                    "title": "Line No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "name_of_referee": {
                    "title": "Name Of Referee",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "place_of_work": {
                    "title": "Place Of Work",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "reference_supoort": {
                    "title": "Reference Support",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                }
            }
        },
        "CashBenefitPaymentSerilaizer": {
            "required": [
                "emp_code",
                "department_code",
                "job_title_code",
                "base_pay",
                "posted",
                "entry_no",
                "payment_type",
                "amount_paid",
                "emp_name",
                "department_name",
                "job_title",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "base_pay": {
                    "title": "Base Pay",
                    "type": "string",
                    "format": "decimal"
                },
                "transaction_date": {
                    "title": "Transaxction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "payment_type": {
                    "title": "Payment Type",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "date_of_seperation": {
                    "title": "Date Of Seperation",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "amount_paid": {
                    "title": "Amount Paid",
                    "type": "string",
                    "format": "decimal"
                },
                "date_paid": {
                    "title": "Date Paid",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "department_name": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "CBAIssues": {
            "required": [
                "cba_no",
                "entry_no",
                "issues_negotiated",
                "date",
                "status"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "cba_no": {
                    "title": "CBA No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "issues_negotiated": {
                    "title": "Issues Negotiated",
                    "type": "string",
                    "minLength": 1
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "CollectiveBargaining": {
            "required": [
                "no",
                "description",
                "status",
                "no_series",
                "posted",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "minLength": 1
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "date_of_new_cba": {
                    "title": "Date Of New CBA",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "expiry_date": {
                    "title": "Expiry Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "Company": {
            "required": [
                "code",
                "comp_name",
                "address",
                "address_2",
                "phone_number",
                "contact_person",
                "contact_phonenumber",
                "contact_email",
                "employment_plan",
                "emp_plan_submission_date",
                "organogram",
                "organogram_submission_date",
                "job_decription",
                "job_desc_submission_date",
                "comments",
                "number_series",
                "comp_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "comp_name": {
                    "title": "Company Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address_2": {
                    "title": "Address 2",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "phone_number": {
                    "title": "Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_person": {
                    "title": "Contact Person",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_phonenumber": {
                    "title": "Contact Person's No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_email": {
                    "title": "Contact Person's Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "employment_plan": {
                    "title": "Employment Plan",
                    "type": "boolean"
                },
                "emp_plan_submission_date": {
                    "title": "Employment Plan Submission Date",
                    "type": "string",
                    "format": "date"
                },
                "organogram": {
                    "title": "Organogram",
                    "type": "boolean"
                },
                "organogram_submission_date": {
                    "title": "Organigram",
                    "type": "string",
                    "format": "date"
                },
                "job_decription": {
                    "title": "Job Descriptions",
                    "type": "boolean"
                },
                "job_desc_submission_date": {
                    "title": "Job Desc. Submission Date",
                    "type": "string",
                    "format": "date"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "minLength": 1
                },
                "number_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "comp_type": {
                    "title": "Company Type",
                    "type": "integer"
                }
            }
        },
        "CompanyField": {
            "required": [
                "code",
                "field_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "field_name": {
                    "title": "Field Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "CompanyStaffBreakdown": {
            "required": [
                "employee_type",
                "fieldname",
                "management",
                "senior_staff",
                "junior_staff",
                "other_staff",
                "total",
                "start_date",
                "end_date",
                "current",
                "company_code",
                "field_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "employee_type": {
                    "title": "Employee Type",
                    "type": "string",
                    "enum": [
                        "GHANAIAN",
                        "EXPATRIATE"
                    ]
                },
                "fieldname": {
                    "title": "Field Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "management": {
                    "title": "Management",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "senior_staff": {
                    "title": "Senior Staff",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "junior_staff": {
                    "title": "Junior Staff",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "other_staff": {
                    "title": "Other Staff",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "total": {
                    "title": "Total",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date"
                },
                "current": {
                    "title": "Current",
                    "type": "boolean"
                },
                "company_code": {
                    "title": "Company Code",
                    "type": "integer"
                },
                "field_code": {
                    "title": "Field Code",
                    "type": "integer"
                }
            }
        },
        "CompanyType": {
            "required": [
                "code",
                "type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "type": {
                    "title": "Company Type",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "CourierCompaniesSerilizer": {
            "required": [
                "entry_no",
                "company_name",
                "contact_person",
                "contact_person_no",
                "office_location",
                "comments"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "company_name": {
                    "title": "Company Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_person": {
                    "title": "Contact Person",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_person_no": {
                    "title": "Contact Person's No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "office_location": {
                    "title": "Office Location",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "comments": {
                    "title": "Commments",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "CourierServiceRequisition": {
            "required": [
                "no",
                "requesting_dept_code",
                "requesting_officer",
                "destination_address",
                "parcel_type",
                "serial_no",
                "no_series",
                "courier_no",
                "courier_service_operator",
                "document_serial_no",
                "billing_amount",
                "posted",
                "billed",
                "requesting_department",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "requesting_dept_code": {
                    "title": "Requesting Department Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "requesting_officer": {
                    "title": "Requesting Officer",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "destination_address": {
                    "title": "Destination Address",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "parcel_type": {
                    "title": "Parcel Type",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "serial_no": {
                    "title": "Serial No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "date_of_delivery_to_courier": {
                    "title": "Date Of Delivery To Courier",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "courier_no": {
                    "title": "Courier No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "courier_service_operator": {
                    "title": "Courier Service Operator",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "document_serial_no": {
                    "title": "Document Serial No",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "billing_amount": {
                    "title": "Billing Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "billed": {
                    "title": "Billed",
                    "type": "boolean"
                },
                "requesting_department": {
                    "title": "Requesting Department",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "Department": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name Of Department",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "DisciplinaryActions": {
            "required": [
                "code",
                "description",
                "minor_offense",
                "major_offense",
                "serious_offense",
                "remarks"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "minor_offense": {
                    "title": "Minor Offense",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "major_offense": {
                    "title": "Major Offense",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "serious_offense": {
                    "title": "Serious Offense",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "remarks": {
                    "title": "Remarks",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "EndOfServiceEntry": {
            "required": [
                "emp_code",
                "department_code",
                "job_title_code",
                "base_pay",
                "posted",
                "no",
                "type",
                "no_of_years_service",
                "no_of_excess_months_service",
                "no_of_months_pay",
                "total_esb_amount",
                "add_on_amount",
                "final_total",
                "award_received",
                "emp_name",
                "department_name",
                "job_title",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "base_pay": {
                    "title": "Base Pay",
                    "type": "string",
                    "format": "decimal"
                },
                "transaction_date": {
                    "title": "Transaxction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "RETIREMENT BENEFIT",
                        "LONG SERVICE"
                    ]
                },
                "employment_date": {
                    "title": "Employment Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_of_service_date": {
                    "title": "End Of Service Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_of_years_service": {
                    "title": "No. Of Years Service",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "no_of_excess_months_service": {
                    "title": "No. Of Excess Months Service",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "no_of_months_pay": {
                    "title": "No. Of Months Pay",
                    "type": "string",
                    "format": "decimal"
                },
                "total_esb_amount": {
                    "title": "Total ESB Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "add_on_amount": {
                    "title": "Add On Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "final_total": {
                    "title": "Final Total",
                    "type": "string",
                    "format": "decimal"
                },
                "award_received": {
                    "title": "Award Received",
                    "type": "string",
                    "minLength": 1
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "department_name": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "Expatriates": {
            "required": [
                "expatriate_no",
                "name",
                "gender",
                "nationality",
                "passport_page",
                "curriculum_vitae",
                "medical_report",
                "employment_contract",
                "police_report",
                "passport_no",
                "place_of_issue",
                "contract_no",
                "party1",
                "party2",
                "purpose_of_contract",
                "duration_of_contract",
                "company_code",
                "job_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "expatriate_no": {
                    "title": "Expatraited No",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "gender": {
                    "title": "Gender",
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ]
                },
                "nationality": {
                    "title": "Nationality",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "passport_page": {
                    "title": "Passport Page",
                    "type": "boolean"
                },
                "curriculum_vitae": {
                    "title": "Curriculium Vitae",
                    "type": "boolean"
                },
                "medical_report": {
                    "title": "Medical Report",
                    "type": "boolean"
                },
                "employment_contract": {
                    "title": "Employment Contract",
                    "type": "boolean"
                },
                "police_report": {
                    "title": "Police Report",
                    "type": "boolean"
                },
                "passport_no": {
                    "title": "Passport No",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "place_of_issue": {
                    "title": "Place Of Issue",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "date_of_issue": {
                    "title": "Date Of Issue",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "contract_no": {
                    "title": "Contract No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "party1": {
                    "title": "Party 1",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "party2": {
                    "title": "Party 2",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "purpose_of_contract": {
                    "title": "Purpose Of Contract",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "duration_of_contract": {
                    "title": "Duration Of Contract(Months)",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "commencement_date": {
                    "title": "Commencement Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "company_code": {
                    "title": "Company Code",
                    "type": "integer"
                },
                "job_code": {
                    "title": "Job Code",
                    "type": "integer"
                }
            }
        },
        "ExpatriatesApplication": {
            "required": [
                "application_no",
                "duration_of_stay",
                "interior_ref_number",
                "comments",
                "application_to_gnpc",
                "application_to_ministry",
                "expatriate_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "application_no": {
                    "title": "Application No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "date_of_application": {
                    "title": "Date Of Application",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "date_received": {
                    "title": "Date Received",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "date_of_expatriate_arrival": {
                    "title": "Date Of Expatriate Arrival",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "duration_of_stay": {
                    "title": "Duration Of Stay(Months)",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "date_of_submission": {
                    "title": "Date Of Submission",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "date_of_approval": {
                    "title": "Date Of Approval",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "interior_ref_number": {
                    "title": "Interior Ref No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "application_to_gnpc": {
                    "title": "Application To GNPC",
                    "type": "boolean"
                },
                "application_to_ministry": {
                    "title": "Application TO Ministry",
                    "type": "boolean"
                },
                "expatriate_no": {
                    "title": "Expatriate No.",
                    "type": "integer"
                }
            }
        },
        "GrievanceCommitteeMembers": {
            "required": [
                "grievance_code",
                "entry_no",
                "member_name",
                "address",
                "phone_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "grievance_code": {
                    "title": "Grievance Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "member_name": {
                    "title": "Member Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "phone_no": {
                    "title": "Phone No.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                }
            }
        },
        "GrievanceEntry": {
            "required": [
                "no",
                "employee_code",
                "department_code",
                "job_title_code",
                "job_title",
                "nature_of_grievance",
                "status",
                "decision_taken",
                "no_series",
                "posted",
                "employee_name",
                "department_name",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "employee_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "nature_of_grievance": {
                    "title": "Nature Of Grievance",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "decision_taken": {
                    "title": "Decision Taken",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "effective_date": {
                    "title": "Effective Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "employee_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "GrievanceHeader": {
            "required": [
                "no",
                "review_type",
                "year_of_review",
                "review_no",
                "department_name",
                "job_title",
                "supervisor_level",
                "supervisor_name",
                "supervisor_job_title",
                "next_supervisor_level",
                "next_supervisor_name",
                "next_supervisor_job_title",
                "next_supervisor_signed",
                "grievance_description",
                "grievance_posted",
                "supervisor_respond",
                "response_posted",
                "next_supervisor_respond",
                "next_response_posted",
                "user_id",
                "no_series",
                "posted",
                "department_code",
                "emp_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "review_type": {
                    "title": "Review Type",
                    "type": "string",
                    "enum": [
                        "QUARTERLY REVEIW",
                        "YEAR END REVIEW",
                        "YEAR END APPRAISAL"
                    ]
                },
                "year_of_review": {
                    "title": "Year Of Review",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "review_no": {
                    "title": "Review No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "employment_date": {
                    "title": "Employment Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "supervisor_level": {
                    "title": "Supervisor Level",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "supervisor_name": {
                    "title": "Supervisor Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "supervisor_job_title": {
                    "title": "Supervisor Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "next_supervisor_level": {
                    "title": "Supervisor Level",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "next_supervisor_name": {
                    "title": "Next Supervisor Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "next_supervisor_job_title": {
                    "title": "Next Supervisor Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "next_supervisor_signed": {
                    "title": "Employee Signed",
                    "type": "boolean"
                },
                "next_supervisor_signed_date": {
                    "title": "Employee Signed Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "grievance_description": {
                    "title": "Grieveance Description",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "grievance_date": {
                    "title": "Grievance Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "grievance_posted": {
                    "title": "Grievance POsted",
                    "type": "boolean"
                },
                "supervisor_respond": {
                    "title": "Supervisor Respond",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "supervisor_respond_date": {
                    "title": "Supervisor Respond Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "response_posted": {
                    "title": "Response Posted",
                    "type": "boolean"
                },
                "next_supervisor_respond": {
                    "title": "Next Supervisor Respond",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "next_supervisor_respond_date": {
                    "title": "Next Supervisor Respond Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "next_response_posted": {
                    "title": "Next Response Posted",
                    "type": "boolean"
                },
                "transation_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "user_id": {
                    "title": "User ID",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                }
            }
        },
        "GrievanceLine": {
            "required": [
                "entry_no",
                "performance_target",
                "corporate_objective_code",
                "dept_objective_entry_no",
                "departmental_objective_text",
                "measurement_indicator",
                "weight",
                "rating",
                "rating_result",
                "remarks",
                "achievements",
                "grievance",
                "supervisor_response",
                "next_supervisor_response",
                "header_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "performance_target": {
                    "title": "Performance Target",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "corporate_objective_code": {
                    "title": "Corporate Objective Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "dept_objective_entry_no": {
                    "title": "Departmental Objective Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "departmental_objective_text": {
                    "title": "Departmental Objective Text",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "measurement_indicator": {
                    "title": "Measurement Indicator",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "weight": {
                    "title": "Weight",
                    "type": "string",
                    "format": "decimal"
                },
                "target_date": {
                    "title": "Target Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "rating": {
                    "title": "Rating",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "rating_result": {
                    "title": "Rating Result",
                    "type": "string",
                    "enum": [
                        "UNACCEPTABLE",
                        "EXPECTATION",
                        "BELOW EXPECTATIONS",
                        "AVERAGE EXPECTATIONS",
                        "MEETS EXPECTATIONS",
                        "EXCEEDS EXPECTATIONS"
                    ]
                },
                "remarks": {
                    "title": "Remarks",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "achievements": {
                    "title": "Achievements",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "grievance": {
                    "title": "Grievance",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "supervisor_response": {
                    "title": "Supervisor Response",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "next_supervisor_response": {
                    "title": "Next Supervisor Response",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "header_no": {
                    "title": "Header No.",
                    "type": "integer"
                }
            }
        },
        "Holiday": {
            "required": [
                "date",
                "holiday"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "holiday": {
                    "title": "Holiday",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "HospitalityFacilities": {
            "required": [
                "code",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "HospitalityServices": {
            "required": [
                "no",
                "hospitality_facility_code",
                "services_provided",
                "location",
                "bill_amount",
                "comments",
                "posted",
                "no_series",
                "hospitality_facility",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "hospitality_facility_code": {
                    "title": "Hospitality Facility Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "services_provided": {
                    "title": "Services Provided",
                    "type": "string",
                    "minLength": 1
                },
                "location": {
                    "title": "Location",
                    "type": "string",
                    "minLength": 1
                },
                "date_of_transaction": {
                    "title": "Date Of TRansaction",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "bill_amount": {
                    "title": "Bill Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "hospitality_facility": {
                    "title": "Hospitality facility",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User",
                    "type": "integer"
                }
            }
        },
        "HRAlerts": {
            "required": [
                "entry_no",
                "alert_type",
                "description",
                "dismissed",
                "emp_code",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "alert_type": {
                    "title": "Alert Type",
                    "type": "string",
                    "enum": [
                        "STAFFING",
                        "TRAINING",
                        "COMPENSATION",
                        "LEAVE",
                        "MEDICALS",
                        "LABOUR",
                        "TRAVELS",
                        "SERVICES"
                    ]
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "alert_date": {
                    "title": "Alert Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "dismissed": {
                    "title": "Dismissed",
                    "type": "boolean"
                },
                "date_dismissed": {
                    "title": "Date Dismissed",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "HRApprovalEntry": {
            "required": [
                "table_id",
                "document_type",
                "document_code",
                "sequence_no",
                "source_code",
                "sender_id",
                "approver_id",
                "status",
                "comment",
                "last_modified_by_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "table_id": {
                    "title": "Table ID",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "document_type": {
                    "title": "Document Type",
                    "type": "string",
                    "enum": [
                        "STAFFING",
                        "TRAINING",
                        "COMPENSATION",
                        "LEAVE",
                        "MEDICALS",
                        "LABOUR",
                        "TRAVELS",
                        "SERVICES"
                    ]
                },
                "document_code": {
                    "title": "Document Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "sequence_no": {
                    "title": "Sequence No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "source_code": {
                    "title": "Source Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "sender_id": {
                    "title": "Sender ID",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "approver_id": {
                    "title": "Approver ID",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "CREATED",
                        "OPEN",
                        "CANCELED",
                        "REJECTED",
                        "APPROVED"
                    ]
                },
                "date_time_sent_for_approval": {
                    "title": "Date Time Sent For Approval",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "last_date_time_modified": {
                    "title": "Last Modified By ID",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "last_modified_by_id": {
                    "title": "Last Modified By",
                    "type": "integer"
                }
            }
        },
        "HRNeedsLine": {
            "required": [
                "header_no",
                "line_no",
                "job_title",
                "job_level_code",
                "job_level",
                "no_of_personnel_required",
                "job_title_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "header_no": {
                    "title": "Header No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "line_no": {
                    "title": "Line No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_level_code": {
                    "title": "Job Level Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_level": {
                    "title": "Job Level",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "no_of_personnel_required": {
                    "title": "No. Of Personnel Required",
                    "type": "string",
                    "format": "decimal"
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "integer"
                }
            }
        },
        "HRNeedsSQEF": {
            "required": [
                "header_no",
                "line_no",
                "job_title",
                "entry_no",
                "entry_type",
                "description",
                "remarks",
                "institution",
                "programme_of_study",
                "year_of_completion",
                "place_of_work",
                "position",
                "duties"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "header_no": {
                    "title": "Header No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "line_no": {
                    "title": "Line No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "entry_type": {
                    "title": "Entry Type",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "remarks": {
                    "title": "Remarks",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "institution": {
                    "title": "Institution",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "programme_of_study": {
                    "title": "Programme Of Study",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "year_of_completion": {
                    "title": "Year Of Completion",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "place_of_work": {
                    "title": "Place Of Work",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "position": {
                    "title": "Position",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "duties": {
                    "title": "Duties",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                }
            }
        },
        "Job": {
            "required": [
                "job_code",
                "job_title",
                "job_duties",
                "academic_qualification",
                "prof_tech_qualification",
                "key_competencies",
                "relevant_work_experience",
                "comp_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "job_code": {
                    "title": "Job Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_duties": {
                    "title": "Job Duties",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "academic_qualification": {
                    "title": "Academic Qualification",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "prof_tech_qualification": {
                    "title": "Prof/Technical Qualification",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "key_competencies": {
                    "title": "Key Comptencies",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "relevant_work_experience": {
                    "title": "Relevant Work Experience",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "comp_code": {
                    "title": "Company Code",
                    "type": "integer"
                }
            }
        },
        "JobApplication": {
            "required": [
                "entry_no",
                "firstname",
                "middlename",
                "lastname",
                "title",
                "address",
                "phone_no",
                "email",
                "sex",
                "referred_from",
                "referred_to",
                "reference_no",
                "category",
                "post_code",
                "city",
                "disqualified",
                "country_code",
                "region_code",
                "nationality_code",
                "medical_status",
                "application_status",
                "overall_status",
                "weighted_score",
                "applicant_score",
                "remove",
                "pre_emp_medicals",
                "medical_comments",
                "criminal_background_check",
                "criminal_background_comments",
                "emp_status",
                "copied",
                "publication_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "firstname": {
                    "title": "Firstname",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "middlename": {
                    "title": "Middlename",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "lastname": {
                    "title": "LastName",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "enum": [
                        "MR.",
                        "MISS.",
                        "MRS.",
                        "DR.",
                        "PROF."
                    ]
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address2": {
                    "title": "Address2",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "phone_no": {
                    "title": "Mobile Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "dob": {
                    "title": "Date Of Birth",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "sex": {
                    "title": "Sex",
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ]
                },
                "date_received": {
                    "title": "Date Received",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "referred_from": {
                    "title": "Referred From",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "referred_to": {
                    "title": "Referred To",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "reference_no": {
                    "title": "Reference No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "post_code": {
                    "title": "Post Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "city": {
                    "title": "City",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "disqualified": {
                    "title": "Disqualified",
                    "type": "boolean"
                },
                "country_code": {
                    "title": "Country Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "region_code": {
                    "title": "Region Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "nationality_code": {
                    "title": "Nationality Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "medical_status": {
                    "title": "Medical Status",
                    "type": "string",
                    "enum": [
                        "CLAIM",
                        "REFUND"
                    ]
                },
                "application_status": {
                    "title": "Application Status",
                    "type": "string",
                    "enum": [
                        "APPLICANT",
                        "INTERVIEWED/EXAMINED",
                        "SHORT_LISTED",
                        "SELECTED"
                    ]
                },
                "overall_status": {
                    "title": "Overall Status",
                    "type": "string",
                    "enum": [
                        "NOT RECOMMENDED",
                        "RECOMMENDED"
                    ]
                },
                "modified_date": {
                    "title": "Modified Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "weighted_score": {
                    "title": "Weighted Score",
                    "type": "string",
                    "format": "decimal"
                },
                "applicant_score": {
                    "title": "Applicant Score(%)",
                    "type": "string",
                    "format": "decimal"
                },
                "remove": {
                    "title": "Remove",
                    "type": "boolean"
                },
                "pre_emp_medicals": {
                    "title": "Pre-employment Medicals",
                    "type": "boolean"
                },
                "medical_comments": {
                    "title": "Medical Comments",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "criminal_background_check": {
                    "title": "Criminal Background Check",
                    "type": "boolean"
                },
                "criminal_background_comments": {
                    "title": "Criminal Background Check",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "interview_date": {
                    "title": "Interview Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "emp_status": {
                    "title": "Employment Status",
                    "type": "string",
                    "enum": [
                        "OFFERED",
                        "ACCEPTED"
                    ]
                },
                "acceptance_date": {
                    "title": "Acceptance Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "assumption_date": {
                    "title": "Assumption Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "probation_date": {
                    "title": "Probation Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "confirmation_date": {
                    "title": "Confirmation Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "copied": {
                    "title": "Copied",
                    "type": "boolean"
                },
                "publication_no": {
                    "title": "Publication No.",
                    "type": "integer"
                }
            }
        },
        "JobApplicationQualification": {
            "required": [
                "line_no",
                "from_date",
                "to_date",
                "type",
                "description",
                "institution_company",
                "cost",
                "course_grade",
                "publication_no",
                "qualification_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "line_no": {
                    "title": "Line No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "from_date": {
                    "title": "From Date",
                    "type": "string",
                    "format": "date"
                },
                "to_date": {
                    "title": "To Date",
                    "type": "string",
                    "format": "date"
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "INTERNAL",
                        "EXTERNAL",
                        "PREVIOUS POSITION"
                    ]
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "institution_company": {
                    "title": "Institution/Company",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "cost": {
                    "title": "Cost",
                    "type": "string",
                    "format": "decimal"
                },
                "course_grade": {
                    "title": "Course Grade",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "expiration_date": {
                    "title": "Expiration Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "publication_no": {
                    "title": "Publication No.",
                    "type": "integer"
                },
                "qualification_code": {
                    "title": "Qualification Code",
                    "type": "integer"
                }
            }
        },
        "MedicalCentres": {
            "required": [
                "code",
                "name",
                "address",
                "contact_no",
                "contact_person",
                "blocked"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address": {
                    "title": "Adress",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address2": {
                    "title": "Address2",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "contact_no": {
                    "title": "Contact Number",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_person": {
                    "title": "Contact Person",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "blocked": {
                    "title": "Blocked",
                    "type": "boolean"
                }
            }
        },
        "MedicalCodes": {
            "required": [
                "code",
                "description",
                "limit_type",
                "medical_limit",
                "blocked"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "limit_type": {
                    "title": "Limit Type",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "medical_limit": {
                    "title": "Medical Limit",
                    "type": "string",
                    "enum": [
                        "NO LIMIT",
                        "PER VISIT",
                        "Annual"
                    ]
                },
                "blocked": {
                    "title": "Blocked",
                    "type": "boolean"
                }
            }
        },
        "MinimumQualification": {
            "required": [
                "entry_no",
                "minimum_qualification"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "minimum_qualification": {
                    "title": "Minimum Qualification",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "OrganizationStructure": {
            "required": [
                "organizational_level_code",
                "level_description",
                "reports_to_level",
                "level_in_structure",
                "department_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "organizational_level_code": {
                    "title": "Organizational Level Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "level_description": {
                    "title": "Level Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "reports_to_level": {
                    "title": "Reports To Level",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "level_in_structure": {
                    "title": "Level In Structure",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                }
            }
        },
        "PassportIssues": {
            "required": [
                "entry_no",
                "emp_code",
                "passport_no",
                "visa_type",
                "country",
                "purpose_of_trip",
                "posted",
                "emp_name",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "passport_no": {
                    "title": "Passport No",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "date_of_issue": {
                    "title": "Date Of Issue",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "date_of_expiry": {
                    "title": "Date Of Expiry",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "visa_type": {
                    "title": "Visa Type",
                    "type": "string",
                    "enum": [
                        "SINGLE ENTRY",
                        "MULTIPLE ENTRY"
                    ]
                },
                "country": {
                    "title": "Country",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "travel_date": {
                    "title": "Travel Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "return_date": {
                    "title": "Return Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "purpose_of_trip": {
                    "title": "Purpose Of Trip",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "PerformanceOverview": {
            "required": [
                "type",
                "no",
                "emp_code",
                "supervisor_name",
                "next_supervisor_name",
                "emp_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "INITIAL SETUP",
                        "INTERIM REVIEW",
                        "YEAR ENDREVIEW"
                    ]
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "supervisor_name": {
                    "title": "Supervisor Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "next_supervisor_name": {
                    "title": "Next Supervisor",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "entry_date": {
                    "title": "Entry Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "emp_name": {
                    "title": "Employee Code",
                    "type": "integer"
                }
            }
        },
        "Property": {
            "required": [
                "code",
                "description",
                "asset_value",
                "currency",
                "blocked"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "asset_value": {
                    "title": "Asset Value",
                    "type": "string",
                    "format": "decimal"
                },
                "currency": {
                    "title": "Currency",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "blocked": {
                    "title": "Blocked",
                    "type": "boolean"
                }
            }
        },
        "PropertyAssignment": {
            "required": [
                "no",
                "emp_code",
                "asset_description",
                "expected_return_date",
                "comment",
                "no_series",
                "posted",
                "retrieved",
                "emp_name",
                "asset_code",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "asset_description": {
                    "title": "Asset Description",
                    "type": "string",
                    "minLength": 1
                },
                "assignment_date": {
                    "title": "Assignment Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "expected_return_date": {
                    "title": "Expected Return Date",
                    "type": "string",
                    "format": "date"
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "retrieved": {
                    "title": "Retrieved",
                    "type": "boolean"
                },
                "retrieval_date": {
                    "title": "Retrieval Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "asset_code": {
                    "title": "Asset Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "QualificationMetricSQEF": {
            "required": [
                "job_title_code",
                "entry_no",
                "entry_type",
                "minimum_work_experience",
                "skills_knowledge_requirement",
                "minimum_qualification"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "entry_type": {
                    "title": "Entry Type",
                    "type": "string",
                    "enum": [
                        "SKILLS",
                        "QUALIFICATION",
                        "EXPERIENCE"
                    ]
                },
                "minimum_work_experience": {
                    "title": "Minimum Work Experience",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "skills_knowledge_requirement": {
                    "title": "Skills/Knowledge Requirement",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "minimum_qualification": {
                    "title": "Minimum Qualification",
                    "type": "integer"
                }
            }
        },
        "ShortListedApplication": {
            "required": [
                "entry_no",
                "firstname",
                "middlename",
                "lastname",
                "title",
                "address",
                "phone_no",
                "email",
                "sex",
                "referred_from",
                "referred_to",
                "reference_no",
                "category",
                "add_to_shortlist"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "firstname": {
                    "title": "Firstname",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "middlename": {
                    "title": "Middlename",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "lastname": {
                    "title": "LastName",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "enum": [
                        "MR.",
                        "MISS.",
                        "MRS.",
                        "DR.",
                        "PROF."
                    ]
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address2": {
                    "title": "Address2",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "phone_no": {
                    "title": "Mobile Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "dob": {
                    "title": "Date Of Birth",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "sex": {
                    "title": "Sex",
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ]
                },
                "date_received": {
                    "title": "Date Received",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "referred_from": {
                    "title": "Referred From",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "referred_to": {
                    "title": "Referred To",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "reference_no": {
                    "title": "Reference No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "add_to_shortlist": {
                    "title": "Add To ShortList",
                    "type": "boolean"
                }
            }
        },
        "SJNCMembers": {
            "required": [
                "cba_no",
                "entry_no",
                "employee_code",
                "member_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "cba_no": {
                    "title": "CBA No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "employee_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "member_name": {
                    "title": "Memeber Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "TravelExpenses": {
            "required": [
                "expense_code",
                "expense_description",
                "currency_code",
                "amount",
                "travel_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "expense_code": {
                    "title": "Expense Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "expense_description": {
                    "title": "Expense Description",
                    "type": "string",
                    "minLength": 1
                },
                "currency_code": {
                    "title": "Currency Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "amount": {
                    "title": "Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "travel_no": {
                    "title": "Travel No",
                    "type": "integer"
                }
            }
        },
        "Travels": {
            "required": [
                "no",
                "personnel_type",
                "employee_no",
                "personnel_name",
                "destination",
                "purpose",
                "contact_person",
                "contact_phone_no",
                "currency_code",
                "no_series",
                "posted",
                "total_expense",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "personnel_type": {
                    "title": "Personnel Type",
                    "type": "string",
                    "enum": [
                        "STAFF",
                        "NON STAFF"
                    ]
                },
                "employee_no": {
                    "title": "Employee No",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "personnel_name": {
                    "title": "Personnel Name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "travel_start_date": {
                    "title": "Travel Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "travel_end_date": {
                    "title": "Travel End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "destination": {
                    "title": "Destination",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "purpose": {
                    "title": "Purpose",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "contact_person": {
                    "title": "Contact Person",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "contact_phone_no": {
                    "title": "Contact Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "currency_code": {
                    "title": "Curremt Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "total_expense": {
                    "title": "Total Expense",
                    "type": "string",
                    "format": "decimal"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "WorkmenCompensation": {
            "required": [
                "no",
                "type",
                "emp_name",
                "job_title_code",
                "division",
                "incident_details",
                "nature_of_injury",
                "amount_paid",
                "percentage_awarded",
                "name_of_issuer",
                "no_series",
                "posted",
                "emp_code",
                "job_title",
                "department",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "INCODENT",
                        "COMPENSATION CLAIM"
                    ]
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "job_title_code": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "division": {
                    "title": "Division",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "incident_details": {
                    "title": "Incident Details",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "nature_of_injury": {
                    "title": "Nature Of Injury",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "incident_date": {
                    "title": "Incident Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "amount_paid": {
                    "title": "Amount Paid",
                    "type": "string",
                    "format": "decimal"
                },
                "percentage_awarded": {
                    "title": "Percentage Awarded",
                    "type": "string",
                    "format": "decimal"
                },
                "compensation_date": {
                    "title": "Compensation Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "name_of_issuer": {
                    "title": "Name Of Issuer",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "integer"
                },
                "department": {
                    "title": "Department",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "Login": {
            "required": [
                "password"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string"
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "PasswordChange": {
            "required": [
                "new_password1",
                "new_password2"
            ],
            "type": "object",
            "properties": {
                "new_password1": {
                    "title": "New password1",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "new_password2": {
                    "title": "New password2",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                }
            }
        },
        "PasswordReset": {
            "required": [
                "email"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                }
            }
        },
        "PasswordResetConfirm": {
            "required": [
                "new_password1",
                "new_password2",
                "uid",
                "token"
            ],
            "type": "object",
            "properties": {
                "new_password1": {
                    "title": "New password1",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "new_password2": {
                    "title": "New password2",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "minLength": 1
                },
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "UserDetails": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "pk": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "readOnly": true,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 150
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 150
                }
            }
        },
        "AppraisalArea": {
            "required": [
                "description",
                "scored"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "scored": {
                    "title": "Scored",
                    "type": "boolean"
                }
            }
        },
        "Employee": {
            "required": [
                "code",
                "first_name",
                "last_name",
                "ssnit_number",
                "national_id",
                "nationality",
                "termination_date",
                "company"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "gender": {
                    "title": "Gender",
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "x-nullable": true
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "middle_name": {
                    "title": "Middle name",
                    "type": "string",
                    "maxLength": 80,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "bank": {
                    "title": "Bank",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "bank_branch": {
                    "title": "Bank branch",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "account_number": {
                    "title": "Account number",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "job_title": {
                    "title": "Job title",
                    "type": "string",
                    "maxLength": 150,
                    "x-nullable": true
                },
                "employee_category": {
                    "title": "Employee category",
                    "type": "string",
                    "maxLength": 120,
                    "x-nullable": true
                },
                "ssnit_number": {
                    "title": "Ssnit number",
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 1
                },
                "national_id": {
                    "title": "National id",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "date_of_birth": {
                    "title": "Date of birth",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "employement_date": {
                    "title": "Employement date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "TERMINATED"
                    ]
                },
                "nationality": {
                    "title": "Nationality",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "tin": {
                    "title": "Tin",
                    "type": "string",
                    "maxLength": 40,
                    "x-nullable": true
                },
                "hometown": {
                    "title": "HomeTown",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "region_name": {
                    "title": "Region Name",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "username": {
                    "title": "Username",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "emergency_no": {
                    "title": "Emergency No",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "marital_status": {
                    "title": "Marital Status",
                    "type": "string",
                    "enum": [
                        "MARRIED",
                        "DIVORCED",
                        "SINGLE",
                        "SEPERATED",
                        "WIDOWED",
                        "NONE"
                    ]
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "x-nullable": true
                },
                "mobile_no": {
                    "title": "Mobile no",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "address1": {
                    "title": "Address1",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "is_verify": {
                    "title": "Is verify",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "token": {
                    "title": "Token",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "password_reset_code": {
                    "title": "Password reset code",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "reason": {
                    "title": "Reason",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "last_ip": {
                    "title": "Last ip",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "created_at": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "updated_at": {
                    "title": "Updated at",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "emp_picture": {
                    "title": "Emp picture",
                    "type": "string",
                    "x-nullable": true
                },
                "national_id_pic": {
                    "title": "National id pic",
                    "type": "string",
                    "x-nullable": true
                },
                "gh_post_gps": {
                    "title": "Gh post gps",
                    "type": "string",
                    "maxLength": 40,
                    "x-nullable": true
                },
                "company_email": {
                    "title": "Company Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "x-nullable": true
                },
                "cause_of_absence_filter": {
                    "title": "Cause Of Absence Filter",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "total_absence_base": {
                    "title": "Total Absence (Base)",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "grounds_for_termination_code": {
                    "title": "Grounds for Termination Code",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "termination_date": {
                    "title": "Termination Date",
                    "type": "string",
                    "format": "date"
                },
                "company": {
                    "title": "Company",
                    "type": "integer"
                }
            }
        },
        "EmployeeAppraisal": {
            "required": [
                "emp_code",
                "paygroup_code",
                "emp_name",
                "job_title"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "paygroup_code": {
                    "title": "Pay Group Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "appraisal_date": {
                    "title": "Appraisal Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "appraisal_venue": {
                    "title": "Appraisal Venue",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "appraiser": {
                    "title": "Appraiser",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean",
                    "x-nullable": true
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "EmployeeAppraisalResponse": {
            "required": [
                "emp_code",
                "appraisal_code",
                "appraisal_description",
                "line_no",
                "question",
                "score",
                "grading",
                "answer",
                "comment",
                "scored",
                "appraisal_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emp_code": {
                    "title": "Employee",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "appraisal_code": {
                    "title": "Employee Appraisal Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "appraisal_description": {
                    "title": "Appraisal Description",
                    "type": "string",
                    "minLength": 1
                },
                "line_no": {
                    "title": "Line No",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "question": {
                    "title": "Question",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "score": {
                    "title": "Score",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "grading": {
                    "title": "Grading",
                    "type": "string",
                    "enum": [
                        "POOR",
                        "SATISFACTORY",
                        "GOOD",
                        "EXCELLENT"
                    ]
                },
                "answer": {
                    "title": "Answer",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "scored": {
                    "title": "Scored",
                    "type": "boolean"
                },
                "appraisal_no": {
                    "title": "Employee Appraisal No",
                    "type": "integer"
                }
            }
        },
        "EmployeeDisciplinaryActions": {
            "required": [
                "division_code",
                "division_name",
                "disciplinary_code",
                "description",
                "offense_type",
                "recommended_action",
                "remarks",
                "posted",
                "emp_name",
                "department_name",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "division_code": {
                    "title": "Division Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "division_name": {
                    "title": "Division Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "disciplinary_code": {
                    "title": "Disciplinary Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "offense_type": {
                    "title": "Offense Type",
                    "type": "string",
                    "enum": [
                        "MINOR",
                        "MAJOR",
                        "SERIOUS"
                    ]
                },
                "recommended_action": {
                    "title": "Recommended Action",
                    "type": "string",
                    "enum": [
                        "QUERY",
                        "VERBAL WARNING",
                        "WRITTEN WARNING",
                        "SUSPENSION",
                        "DEMOTION",
                        "TERMINATION",
                        "DISMISSAL"
                    ]
                },
                "remarks": {
                    "title": "Remarks",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "suspension_start_date": {
                    "title": "Supsension Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "suspension_end_date": {
                    "title": "Suspension End Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "effective_date": {
                    "title": "Effective Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "EmployeeMedical": {
            "required": [
                "emp_type",
                "division_code",
                "facility_code",
                "facility_name",
                "policy_code",
                "policy_description",
                "limit_type",
                "medical_limit",
                "amount",
                "claim_date",
                "comments",
                "dependant",
                "dependant_name",
                "dependant_code",
                "transaction_date",
                "no_series",
                "posted",
                "emp_name",
                "department",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emp_type": {
                    "title": "Employee Type",
                    "type": "string",
                    "enum": [
                        "ACTIVE EMPLOYEE",
                        "SERVICE PERSONNEL",
                        "Retired Employee",
                        "ATTACHMENT"
                    ]
                },
                "division_code": {
                    "title": "Division Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "facility_code": {
                    "title": "Facility Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "facility_name": {
                    "title": "Facility Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "policy_code": {
                    "title": "Policy Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "policy_description": {
                    "title": "Policy Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "limit_type": {
                    "title": "Limit Type",
                    "type": "string",
                    "enum": [
                        "NO LIMIT",
                        "PER VISIT",
                        "Annual"
                    ]
                },
                "medical_limit": {
                    "title": "Medical Limit",
                    "type": "string",
                    "format": "decimal"
                },
                "amount": {
                    "title": "Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "claim_date": {
                    "title": "Claim Date",
                    "type": "string",
                    "format": "date"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "dependant": {
                    "title": "Dependant",
                    "type": "boolean"
                },
                "dependant_name": {
                    "title": "Department Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "dependant_code": {
                    "title": "Dependant Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "medical_type": {
                    "title": "Medical Type",
                    "type": "integer",
                    "x-nullable": true
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "department": {
                    "title": "Department",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "EmployeePayReview": {
            "required": [
                "no",
                "emp_code",
                "job_title_code",
                "base_pay",
                "percentage_increase",
                "end_date",
                "transaction_date",
                "no_series",
                "posted",
                "emp_name",
                "job_title",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "base_pay": {
                    "title": "BasePay",
                    "type": "string",
                    "format": "decimal"
                },
                "percentage_increase": {
                    "title": "Percentage Increase",
                    "type": "string",
                    "format": "decimal"
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date"
                },
                "effective_date": {
                    "title": "Effective Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "EmployeePolicy": {
            "required": [
                "no",
                "emp_name",
                "phone_number",
                "leave_description",
                "total_leave_days",
                "outstanding_leave_days",
                "no_of_days_requested",
                "start_date",
                "end_date",
                "request_status",
                "deferred_reason",
                "transaction_date",
                "no_series",
                "relieving_officer_no",
                "relieving_officer_name",
                "posted",
                "assignment_no",
                "last_date_modified",
                "closed",
                "emp_code",
                "leave_code",
                "user_id",
                "job_title_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_address": {
                    "title": "Contact Text",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "phone_number": {
                    "title": "Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "leave_description": {
                    "title": "Leave Description",
                    "type": "string",
                    "minLength": 1
                },
                "total_leave_days": {
                    "title": "Total Leave Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "outstanding_leave_days": {
                    "title": "Outstanding Leave Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "no_of_days_requested": {
                    "title": "No. Of Days Requested",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date"
                },
                "request_status": {
                    "title": "Request Status",
                    "type": "string",
                    "enum": [
                        "APPROVED",
                        "DEFERRED",
                        "REJECTED"
                    ]
                },
                "deferred_reason": {
                    "title": "Deferred Reason",
                    "type": "string",
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "relieving_officer_no": {
                    "title": "Relieving Officer No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "relieving_officer_name": {
                    "title": "Relieving Officer's Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "assignment_no": {
                    "title": "Assignment No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "last_date_modified": {
                    "title": "Last Date Modified",
                    "type": "string",
                    "format": "date"
                },
                "closed": {
                    "title": "Closed",
                    "type": "boolean"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "leave_code": {
                    "title": "Leave Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "integer"
                },
                "department_code": {
                    "title": "Department",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "EmployeePromotion": {
            "required": [
                "new_job_title",
                "current_salary_grade",
                "new_salary_grade",
                "current_notch",
                "new_notch",
                "current_basic_salary",
                "new_basic_salary",
                "comment",
                "transaction_date",
                "no_series",
                "posted",
                "effective_date",
                "department_name",
                "emp_name",
                "paygroup",
                "current_job_title",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "new_job_title": {
                    "title": "New Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "current_salary_grade": {
                    "title": "Current Salary Grade",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "new_salary_grade": {
                    "title": "New Salary Grade",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "current_notch": {
                    "title": "Current Notch",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "new_notch": {
                    "title": "New Notch",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "current_basic_salary": {
                    "title": "Current Basic Salary",
                    "type": "string",
                    "format": "decimal"
                },
                "new_basic_salary": {
                    "title": "New Basic Salary",
                    "type": "string",
                    "format": "decimal"
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "effective_date": {
                    "title": "Effective Date",
                    "type": "string",
                    "format": "date"
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "integer"
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "paygroup": {
                    "title": "Pay Group",
                    "type": "integer"
                },
                "current_job_title": {
                    "title": "Current Job",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "GroupInsuranceBeneficiaries": {
            "required": [
                "no",
                "emp_code",
                "job_level",
                "amount",
                "no_series",
                "posted",
                "incident",
                "policy_code",
                "policy_type",
                "insurance_company",
                "emp_name",
                "job_title_code",
                "department_code",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_level": {
                    "title": "Job Level",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "amount": {
                    "title": "Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "incident": {
                    "title": "Incident",
                    "type": "string",
                    "minLength": 1
                },
                "policy_code": {
                    "title": "Policy Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "policy_type": {
                    "title": "Policy Type",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "insurance_company": {
                    "title": "Insurance Company",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "integer"
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "GroupLifeInsurance": {
            "required": [
                "code",
                "address",
                "telephone",
                "contact_person",
                "type_of_policy",
                "premium",
                "amount",
                "name_of_company"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "telephone": {
                    "title": "Telephone",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_person": {
                    "title": "Contact Person",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "type_of_policy": {
                    "title": "Type Of Policy",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "premium": {
                    "title": "Premium",
                    "type": "string",
                    "format": "decimal"
                },
                "amount": {
                    "title": "Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "name_of_company": {
                    "title": "Name Of Company",
                    "type": "integer"
                }
            }
        },
        "InsurancePremiumPayments": {
            "required": [
                "no",
                "insurance_type",
                "amount_paid",
                "remarks",
                "no_series",
                "posted",
                "company_name",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "insurance_type": {
                    "title": "Insurance Type",
                    "type": "string",
                    "enum": [
                        "GROUP PERSONAL",
                        "WORKMEN'S COMPENSATION",
                        "LIFE INSURANCE",
                        "FIRE & ALLIED PERILS",
                        "VEHICLE INSURANCE",
                        "OTHERS"
                    ]
                },
                "period_start_date": {
                    "title": "Period Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "period_end_date": {
                    "title": "Period End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "amount_paid": {
                    "title": "Amount Paid",
                    "type": "string",
                    "format": "decimal"
                },
                "payment_date": {
                    "title": "Payment Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "remarks": {
                    "title": "Remarks",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "company_name": {
                    "title": "Company Name",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "TravelInsuranceEntry": {
            "required": [
                "no",
                "emp_code",
                "job_level",
                "amount",
                "no_series",
                "posted",
                "trip",
                "purpose",
                "emp_name",
                "job_title_code",
                "department_code",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_level": {
                    "title": "Job Level",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "amount": {
                    "title": "Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "trip": {
                    "title": "Trip",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "purpose": {
                    "title": "Purpose",
                    "type": "string",
                    "minLength": 1
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "integer"
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "ApplicationMedicalTest": {
            "required": [
                "entry_no",
                "test_no",
                "medical_test",
                "passed",
                "publication_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "test_no": {
                    "title": "Test No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "medical_test": {
                    "title": "Medical Test",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "passed": {
                    "title": "Passed",
                    "type": "boolean"
                },
                "publication_no": {
                    "title": "Publication No.",
                    "type": "integer"
                }
            }
        },
        "InterviewPanel": {
            "required": [
                "interview_no",
                "entry_no",
                "interviewer_name",
                "job_title",
                "emp_code",
                "job_title_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "interview_no": {
                    "title": "Interview No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "interviewer_name": {
                    "title": "Interviewer Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "integer"
                }
            }
        },
        "InterviewScore": {
            "required": [
                "weight",
                "minimum_score",
                "maximum_score",
                "entry_no",
                "question_no",
                "question",
                "score",
                "weight_average_score",
                "publication_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "weight": {
                    "title": "Weight",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "minimum_score": {
                    "title": "Minimum Score",
                    "type": "string",
                    "format": "decimal"
                },
                "maximum_score": {
                    "title": "Maximum Score",
                    "type": "string",
                    "format": "decimal"
                },
                "entry_no": {
                    "title": "Entry No",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "question_no": {
                    "title": "Question No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "question": {
                    "title": "Question",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "score": {
                    "title": "Score",
                    "type": "string",
                    "format": "decimal"
                },
                "weight_average_score": {
                    "title": "Weighted Average Score",
                    "type": "string",
                    "format": "decimal"
                },
                "publication_code": {
                    "title": "Publication Code",
                    "type": "integer"
                }
            }
        },
        "MedicalQuestionnaire": {
            "required": [
                "test_no",
                "medical_test",
                "publication_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "test_no": {
                    "title": "Test No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "medical_test": {
                    "title": "Medical Test",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "publication_no": {
                    "title": "Publication No.",
                    "type": "integer"
                }
            }
        },
        "JobAnalysis": {
            "required": [
                "emp_name",
                "division",
                "department",
                "reports_to_code",
                "reports_to",
                "job_purpose",
                "prepared_by",
                "date",
                "transaction_date",
                "no_series_code",
                "posted",
                "emp_code",
                "job_title_code",
                "job_title",
                "userId"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "division": {
                    "title": "Division",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department": {
                    "title": "Department",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "reports_to_code": {
                    "title": "ReportTo Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "reports_to": {
                    "title": "Reports To",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "job_purpose": {
                    "title": "Job Purpose",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "prepared_by": {
                    "title": "Prepared By",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date"
                },
                "no_series_code": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "job_title_code": {
                    "title": "Job title code",
                    "type": "integer"
                },
                "job_title": {
                    "title": "Job title",
                    "type": "integer"
                },
                "userId": {
                    "title": "Userid",
                    "type": "integer"
                }
            }
        },
        "JobAnalysisAuthorityuLimit": {
            "required": [
                "entry_no",
                "authority_type",
                "authority_limit",
                "job_analysis_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "authority_type": {
                    "title": "Authority Type",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "authority_limit": {
                    "title": "Authority Limit",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_analysis_no": {
                    "title": "Job Analysis",
                    "type": "integer"
                }
            }
        },
        "JobAnalysisContact": {
            "required": [
                "entry",
                "contact_type",
                "contact_person",
                "position",
                "contact_no",
                "job_analysis_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry": {
                    "title": "Entry",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "contact_type": {
                    "title": "Contact Type",
                    "type": "string",
                    "enum": [
                        "INTERNAL",
                        "EXTERNAL"
                    ]
                },
                "contact_person": {
                    "title": "Contact Person",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "position": {
                    "title": "Position",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_no": {
                    "title": "Contact Number",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_analysis_no": {
                    "title": "Job Analysis No.",
                    "type": "integer"
                }
            }
        },
        "JobAnalysisDemand": {
            "required": [
                "entry",
                "type",
                "description",
                "job_analysis_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "type": {
                    "title": "Demand Type",
                    "type": "string",
                    "enum": [
                        "PHYSICAL WORK ENVIRONMENT",
                        "PHYSICAL EFFORT",
                        "Psychological Demands"
                    ]
                },
                "description": {
                    "title": "Demand Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_analysis_no": {
                    "title": "Job Analysis No.",
                    "type": "integer"
                }
            }
        },
        "JobAnalysisDuties": {
            "required": [
                "entry_no",
                "frequency",
                "duties",
                "responsibilities",
                "adr",
                "job_analysis_number"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry Number",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "frequency": {
                    "title": "Frequency",
                    "type": "string",
                    "enum": [
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "QUARTERLY",
                        "ANNUALLY",
                        "IRREGULAR",
                        "INTERVAL",
                        "OTHER"
                    ]
                },
                "duties": {
                    "title": "Duties",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "responsibilities": {
                    "title": "Responsibilities",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "adr": {
                    "title": "Action/Decision/Resources",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_analysis_number": {
                    "title": "Job Analysis code",
                    "type": "integer"
                }
            }
        },
        "JobAnalysisRequirement": {
            "required": [
                "entry_no",
                "type",
                "description",
                "job_analysis_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "type": {
                    "title": "Requirement Type",
                    "type": "string",
                    "enum": [
                        "QUALIFICATION",
                        "MINIMUM EXPERIENCE",
                        "TECHNICAL COMPETENCIES",
                        "MANAGERIAL COMPETENCIES",
                        "PERSONAL COMPETENCIES"
                    ]
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_analysis_no": {
                    "title": "Job Analysis",
                    "type": "integer"
                }
            }
        },
        "JobAnalysisSupervision": {
            "required": [
                "entry_no",
                "supervision_type",
                "supervision_detail",
                "job_analysis_number"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry Number",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "supervision_type": {
                    "title": "Supervision Type",
                    "type": "string",
                    "enum": [
                        "SUPERVISION GIVEN",
                        "SUPERVISION RECEIVED"
                    ]
                },
                "supervision_detail": {
                    "title": "Supervision Details",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "job_analysis_number": {
                    "title": "Job Analysis code",
                    "type": "integer"
                }
            }
        },
        "JobEvaluation": {
            "required": [
                "entry_no",
                "emp_name",
                "department",
                "current_job_level",
                "current_pay_range",
                "new_job_level",
                "new_pay_range",
                "transaction_date",
                "posted",
                "emp_code",
                "job_title",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department": {
                    "title": "Department",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "current_job_level": {
                    "title": "Current Job Level",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "current_pay_range": {
                    "title": "Current Pay Range",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "new_job_level": {
                    "title": "New Job Level",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "new_pay_range": {
                    "title": "New Pay Range",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "transaction_date": {
                    "title": "Transaction Code",
                    "type": "string",
                    "format": "date"
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_code": {
                    "title": "Emp code",
                    "type": "integer"
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User id",
                    "type": "integer"
                }
            }
        },
        "Assignment": {
            "required": [
                "input_option",
                "input_code",
                "leave_code",
                "no_of_days",
                "accrued",
                "automatically_roll_over",
                "transaction_date",
                "no_series",
                "posted",
                "leave_description",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "input_option": {
                    "title": "Input Option",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "input_code": {
                    "title": "Input Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "leave_code": {
                    "title": "Leave Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "no_of_days": {
                    "title": "No. Of Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "accrued": {
                    "title": "Accrued",
                    "type": "boolean"
                },
                "automatically_roll_over": {
                    "title": "Automatically Roll Over",
                    "type": "boolean"
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "leave_description": {
                    "title": "Leave Description",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "LeavePlan": {
            "required": [
                "emp_name",
                "leave_code",
                "leave_description",
                "no_of_planned_days",
                "department_name",
                "no_series",
                "posted",
                "emp_code",
                "department_code",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "leave_code": {
                    "title": "Leave Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "leave_description": {
                    "title": "Leave Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "no_of_planned_days": {
                    "title": "No. Of Planned Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "LeaveRequest": {
            "required": [
                "no",
                "emp_name",
                "phone_number",
                "leave_description",
                "total_leave_days",
                "outstanding_leave_days",
                "no_of_days_requested",
                "start_date",
                "end_date",
                "request_status",
                "deferred_reason",
                "transaction_date",
                "no_series",
                "relieving_officer_no",
                "relieving_officer_name",
                "posted",
                "emp_code",
                "leave_code",
                "user_id",
                "job_title_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_address": {
                    "title": "Contact Text",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "phone_number": {
                    "title": "Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "leave_description": {
                    "title": "Leave Description",
                    "type": "string",
                    "minLength": 1
                },
                "total_leave_days": {
                    "title": "Total Leave Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "outstanding_leave_days": {
                    "title": "Outstanding Leave Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "no_of_days_requested": {
                    "title": "No. Of Days Requested",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date"
                },
                "request_status": {
                    "title": "Request Status",
                    "type": "string",
                    "enum": [
                        "APPROVED",
                        "DEFERRED",
                        "REJECTED"
                    ]
                },
                "deferred_reason": {
                    "title": "Deferred Reason",
                    "type": "string",
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "relieving_officer_no": {
                    "title": "Relieving Officer No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "relieving_officer_name": {
                    "title": "Relieving Officer's Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "leave_code": {
                    "title": "Leave Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "integer"
                },
                "department_code": {
                    "title": "Department",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LeaveTransaction": {
            "required": [
                "no",
                "emp_name",
                "phone_number",
                "leave_description",
                "total_leave_days",
                "outstanding_leave_days",
                "no_of_days_requested",
                "start_date",
                "end_date",
                "request_status",
                "deferred_reason",
                "transaction_date",
                "no_series",
                "relieving_officer_no",
                "relieving_officer_name",
                "posted",
                "reason_for_recall",
                "approved_from_deferred",
                "recall_amount",
                "emp_code",
                "leave_code",
                "user_id",
                "job_title_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_address": {
                    "title": "Contact Text",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "phone_number": {
                    "title": "Phone No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "leave_description": {
                    "title": "Leave Description",
                    "type": "string",
                    "minLength": 1
                },
                "total_leave_days": {
                    "title": "Total Leave Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "outstanding_leave_days": {
                    "title": "Outstanding Leave Days",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "no_of_days_requested": {
                    "title": "No. Of Days Requested",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date"
                },
                "request_status": {
                    "title": "Request Status",
                    "type": "string",
                    "enum": [
                        "APPROVED",
                        "DEFERRED",
                        "REJECTED"
                    ]
                },
                "deferred_reason": {
                    "title": "Deferred Reason",
                    "type": "string",
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "relieving_officer_no": {
                    "title": "Relieving Officer No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "relieving_officer_name": {
                    "title": "Relieving Officer's Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "reason_recall": {
                    "title": "Recalled",
                    "type": "boolean",
                    "x-nullable": true
                },
                "reason_for_recall": {
                    "title": "Reason For Recall",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "approved_from_deferred": {
                    "title": "Approved From Deferred",
                    "type": "boolean"
                },
                "recall_amount": {
                    "title": "Recall Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "leave_code": {
                    "title": "Leave Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                },
                "job_title_code": {
                    "title": "Job Title Code",
                    "type": "integer"
                },
                "department_code": {
                    "title": "Department",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "CooperateObjectives": {
            "required": [
                "code",
                "objective_description",
                "year_of_review",
                "no_series",
                "posted",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "objective_description": {
                    "title": "Objective Description",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "year_of_review": {
                    "title": "Year Of Review",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "CorporateValues": {
            "required": [
                "code",
                "objective_description",
                "year_of_review",
                "no_series",
                "posted",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "objective_description": {
                    "title": "Objective Description",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "year_of_review": {
                    "title": "Year Of Review",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "DepartmentObjectives": {
            "required": [
                "corp_obj_description",
                "entry_no",
                "department_name",
                "objective_description",
                "review_year",
                "posted",
                "corp_obj_code",
                "department_code",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "corp_obj_description": {
                    "title": "Corp Objective Description",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "objective_description": {
                    "title": "Objective Description",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "review_year": {
                    "title": "Review Year",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "corp_obj_code": {
                    "title": "Cooperate Objective Code",
                    "type": "integer"
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "IndividualObjectiveLines": {
            "required": [
                "header_no",
                "entry_no",
                "performance_target",
                "dept_objective_entry_no",
                "measurement_indicator",
                "weight",
                "corporate_objective_code",
                "dept_object_text"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "header_no": {
                    "title": "Header No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "performance_target": {
                    "title": "Performance Target",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "dept_objective_entry_no": {
                    "title": "Departmental Objective Entry No,",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "measurement_indicator": {
                    "title": "Measurement Indicator",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "weight": {
                    "title": "Weight",
                    "type": "string",
                    "format": "decimal"
                },
                "target_date": {
                    "title": "Target Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "corporate_objective_code": {
                    "title": "Corporate Objective Code",
                    "type": "integer"
                },
                "dept_object_text": {
                    "title": "Departmental Objective Text",
                    "type": "integer"
                }
            }
        },
        "IndividualObjectiveReview": {
            "required": [
                "no",
                "department_name",
                "job_title",
                "supervisor_level",
                "supervisor_name",
                "supervisor_job_title",
                "next_supervisor_level",
                "next_supervisor_name",
                "next_supervisor_job_title",
                "employee_signed",
                "supervisor_signed",
                "next_supervisor_signed",
                "user_id",
                "no_series",
                "emp_name",
                "department_code",
                "emp_code",
                "objective_setting_no"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "performance_start_date": {
                    "title": "Performance Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "performance_end_date": {
                    "title": "Performance End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "employment_date": {
                    "title": "Employment Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "supervisor_level": {
                    "title": "Supervisor Level",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "supervisor_name": {
                    "title": "Supervisor Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "supervisor_job_title": {
                    "title": "Supervisor Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "next_supervisor_level": {
                    "title": "Supervisor Level",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "next_supervisor_name": {
                    "title": "Next Supervisor Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "next_supervisor_job_title": {
                    "title": "Next Supervisor Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "employee_signed": {
                    "title": "Employee Signed",
                    "type": "boolean"
                },
                "employee_signed_date": {
                    "title": "Employee Signed Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "supervisor_signed": {
                    "title": "Supervisor Signed",
                    "type": "boolean"
                },
                "supervisor_signed_date": {
                    "title": "Supervisor Signed Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "next_supervisor_signed": {
                    "title": "Next Supervisor Signed",
                    "type": "boolean"
                },
                "next_supervisor_signed_date": {
                    "title": "Next Supervisor Signed Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transation_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "user_id": {
                    "title": "User ID",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                },
                "objective_setting_no": {
                    "title": "Objective Setting Number",
                    "type": "integer"
                }
            }
        },
        "IndividualObjectiveSetting": {
            "required": [
                "no",
                "department_name",
                "job_title",
                "supervisor_level",
                "supervisor_name",
                "supervisor_job_title",
                "next_supervisor_level",
                "next_supervisor_name",
                "next_supervisor_job_title",
                "employee_signed",
                "supervisor_signed",
                "next_supervisor_signed",
                "user_id",
                "no_series",
                "posted",
                "final_review_complete",
                "total_individual_weights",
                "department_code",
                "emp_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "no": {
                    "title": "No.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "performance_start_date": {
                    "title": "Performance Start Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "performance_end_date": {
                    "title": "Performance End Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "job_title": {
                    "title": "Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "employment_date": {
                    "title": "Employment Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "supervisor_level": {
                    "title": "Supervisor Level",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "supervisor_name": {
                    "title": "Supervisor Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "supervisor_job_title": {
                    "title": "Supervisor Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "next_supervisor_level": {
                    "title": "Supervisor Level",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "next_supervisor_name": {
                    "title": "Next Supervisor Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "next_supervisor_job_title": {
                    "title": "Next Supervisor Job Title",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "employee_signed": {
                    "title": "Employee Signed",
                    "type": "boolean"
                },
                "employee_signed_date": {
                    "title": "Employee Signed Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "supervisor_signed": {
                    "title": "Supervisor Signed",
                    "type": "boolean"
                },
                "supervisor_signed_date": {
                    "title": "Supervisor Signed Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "next_supervisor_signed": {
                    "title": "Next Supervisor Signed",
                    "type": "boolean"
                },
                "next_supervisor_signed_date": {
                    "title": "Next Supervisor Signed Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "transation_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "user_id": {
                    "title": "User ID",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "posted": {
                    "title": "Posted",
                    "type": "boolean"
                },
                "final_review_complete": {
                    "title": "Final Review Complete",
                    "type": "boolean"
                },
                "total_individual_weights": {
                    "title": "Total Individual Weights",
                    "type": "string",
                    "format": "decimal"
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "integer"
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "integer"
                }
            }
        },
        "ObjectiveReviewLinesSerilizer": {
            "required": [
                "header_no",
                "entry_no",
                "performance_target",
                "measurement_indicator",
                "weight",
                "rating",
                "rating_results",
                "remarks",
                "achievements",
                "corporate_objective_code",
                "departmental_objective"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "header_no": {
                    "title": "Header No",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "performance_target": {
                    "title": "Performance Target",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "measurement_indicator": {
                    "title": "Measurement Indicator",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "weight": {
                    "title": "Weight",
                    "type": "string",
                    "format": "decimal"
                },
                "target_date": {
                    "title": "Target Date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "rating": {
                    "title": "Rating",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "rating_results": {
                    "title": "Rating Result",
                    "type": "string",
                    "enum": [
                        "UNACCEPTABLE",
                        "EXPECTATION",
                        "BELOW EXPECTATIONS",
                        "AVERAGE EXPECTATIONS",
                        "MEETS EXPECTATIONS",
                        "EXCEEDS EXPECTATIONS"
                    ]
                },
                "remarks": {
                    "title": "Remarks",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "achievements": {
                    "title": "Achievements",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "corporate_objective_code": {
                    "title": "Corporate Objective Code",
                    "type": "integer"
                },
                "departmental_objective": {
                    "title": "Depatmental Objective Text",
                    "type": "integer"
                }
            }
        },
        "PayGroup": {
            "required": [
                "description",
                "short_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "short_name": {
                    "title": "Short Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "Budget": {
            "required": [
                "training_code",
                "emp_code",
                "expense_description",
                "currency_code",
                "budgeted_cost",
                "actual_cost",
                "expense_type",
                "emp_name",
                "expense_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "training_code": {
                    "title": "Training Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "expense_description": {
                    "title": "Expense Description",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "currency_code": {
                    "title": "Currency Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "budgeted_cost": {
                    "title": "Budgeted Cost",
                    "type": "string",
                    "format": "decimal"
                },
                "actual_cost": {
                    "title": "Actual Cost",
                    "type": "string",
                    "format": "decimal"
                },
                "expense_type": {
                    "title": "Expense Type",
                    "type": "string",
                    "enum": [
                        "PER INDIVIDUAL",
                        "TOTAL COST"
                    ]
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "expense_code": {
                    "title": "Expense Code",
                    "type": "integer"
                }
            }
        },
        "Course": {
            "required": [
                "code",
                "description"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Course Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "description": {
                    "title": "Course Description",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "CourseDetail": {
            "required": [
                "entry_no",
                "no",
                "course_description",
                "course_content",
                "course_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "no": {
                    "title": "No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "course_description": {
                    "title": "Course Detail",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "course_content": {
                    "title": "Course Content",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "course_code": {
                    "title": "Course Code",
                    "type": "integer"
                }
            }
        },
        "Expense": {
            "required": [
                "code",
                "expense_name",
                "currency_code",
                "maximum_value",
                "blocked",
                "expense_usage_type",
                "expense_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Expense Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "expense_name": {
                    "title": "Expense Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "currency_code": {
                    "title": "CUrrency Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "maximum_value": {
                    "title": "Maximum Value",
                    "type": "string",
                    "format": "decimal"
                },
                "blocked": {
                    "title": "Blocked",
                    "type": "boolean"
                },
                "expense_usage_type": {
                    "title": "Expense Usage Type",
                    "type": "string",
                    "enum": [
                        "LOCAL",
                        "FOREIGN"
                    ]
                },
                "expense_type": {
                    "title": "Expnse TYpe",
                    "type": "string",
                    "enum": [
                        "PER INDIVIDUAL",
                        "TOTAL COST"
                    ]
                }
            }
        },
        "Feedback": {
            "required": [
                "training_rating",
                "emp_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "training_code": {
                    "title": "Training Code",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "training_outcome": {
                    "title": "Training Outcome",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "remarks": {
                    "title": "Remarks",
                    "type": "string",
                    "maxLength": 250,
                    "x-nullable": true
                },
                "training_rating": {
                    "title": "Training Rating",
                    "type": "string",
                    "enum": [
                        "EXCELLENT",
                        "GOOD",
                        "AVERAGE",
                        "BELOW AVERAGE",
                        "POOR"
                    ]
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                }
            }
        },
        "OrganizerSerailizer": {
            "required": [
                "code",
                "name",
                "address",
                "address2",
                "contact_number"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "code": {
                    "title": "Organizer Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "name": {
                    "title": "Name Of Organizer",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "address2": {
                    "title": "Address 2",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "contact_number": {
                    "title": "Contact Number",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "Participants": {
            "required": [
                "training_code",
                "emp_code",
                "course_code",
                "transaction_date",
                "emp_name",
                "paygroup_code",
                "course_name",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "training_code": {
                    "title": "Training Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "course_code": {
                    "title": "Course Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date"
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "paygroup_code": {
                    "title": "PayGroup Code",
                    "type": "integer"
                },
                "course_name": {
                    "title": "Course Name",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "Plan": {
            "required": [
                "department_code",
                "course_code",
                "training_facilitator",
                "organizer_code",
                "training_type",
                "training_venue",
                "training_schedule",
                "start_date",
                "end_date",
                "daily_start_time",
                "transaction_date",
                "no_series",
                "currency_code",
                "total_budget_amount",
                "total_actual_amount",
                "variance_amount",
                "training_status",
                "department_name",
                "course_name",
                "organizer_name",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "department_code": {
                    "title": "Department Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "course_code": {
                    "title": "Course Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "training_facilitator": {
                    "title": "Training Facilitator",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "organizer_code": {
                    "title": "Organizer Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "training_type": {
                    "title": "Training Type",
                    "type": "string",
                    "enum": [
                        "IN HOUSE",
                        "EXTERNAL",
                        "OVERSEAS"
                    ]
                },
                "training_venue": {
                    "title": "Training Venue",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "training_schedule": {
                    "title": "Training Schedule",
                    "type": "string",
                    "enum": [
                        "WEEKDAYS",
                        "WEEKDAYS + SATURDAYS",
                        "WEEKDAYS + WEEKENDS"
                    ]
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date"
                },
                "daily_start_time": {
                    "title": "Daily Start Time",
                    "type": "string"
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date"
                },
                "no_series": {
                    "title": "No. Series",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "currency_code": {
                    "title": "CUrrency",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "total_budget_amount": {
                    "title": "Total Budget Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "total_actual_amount": {
                    "title": "Total Actual Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "variance_amount": {
                    "title": "Variance Amount",
                    "type": "string",
                    "format": "decimal"
                },
                "training_status": {
                    "title": "Training Status",
                    "type": "string",
                    "enum": [
                        "PLAN",
                        "SCHEDULED",
                        "COMPLETED",
                        "CANCELLED"
                    ]
                },
                "department_name": {
                    "title": "Department Name",
                    "type": "integer"
                },
                "course_name": {
                    "title": "Course Name",
                    "type": "integer"
                },
                "organizer_name": {
                    "title": "Organizer Name",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "Request": {
            "required": [
                "training_code",
                "entry_no",
                "emp_code",
                "course_code",
                "facilitator",
                "organizer_code",
                "training_type",
                "training_venue",
                "training_schedule",
                "start_date",
                "end_date",
                "daily_start_time",
                "dimension_code",
                "dimension_value",
                "approved",
                "transaction_date",
                "emp_name",
                "course_name",
                "organizer_name",
                "paygroup_code",
                "user_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "training_code": {
                    "title": "Training Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "entry_no": {
                    "title": "Entry No.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "emp_code": {
                    "title": "Employee Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "course_code": {
                    "title": "Course Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "facilitator": {
                    "title": "Faciliator",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "organizer_code": {
                    "title": "Organizer Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "training_type": {
                    "title": "Training Type",
                    "type": "string",
                    "enum": [
                        "INTERNAL",
                        "EXTERNAL",
                        "INTERNATIONAL"
                    ]
                },
                "training_venue": {
                    "title": "Training Venue",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "training_schedule": {
                    "title": "Training Schedule",
                    "type": "string",
                    "enum": [
                        "WEEKDAYS",
                        "WEEKDAYS + SATURDAYS",
                        "WEEKDAYS + WEEKENDS"
                    ]
                },
                "start_date": {
                    "title": "Start Date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "title": "End Date",
                    "type": "string",
                    "format": "date"
                },
                "daily_start_time": {
                    "title": "Daily Start Time",
                    "type": "string"
                },
                "dimension_code": {
                    "title": "Dimension Code",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "dimension_value": {
                    "title": "Dimension Value",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "approved": {
                    "title": "Approved",
                    "type": "boolean"
                },
                "transaction_date": {
                    "title": "Transaction Date",
                    "type": "string",
                    "format": "date"
                },
                "emp_name": {
                    "title": "Employee Name",
                    "type": "integer"
                },
                "course_name": {
                    "title": "Course Name",
                    "type": "integer"
                },
                "organizer_name": {
                    "title": "Organizer name",
                    "type": "integer"
                },
                "paygroup_code": {
                    "title": "PayGroup Code",
                    "type": "integer"
                },
                "user_id": {
                    "title": "User ID",
                    "type": "integer"
                }
            }
        },
        "User": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "is_staff": {
                    "title": "Staff status",
                    "description": "Designates whether the user can log into this admin site.",
                    "type": "boolean"
                }
            }
        }
    }
}
