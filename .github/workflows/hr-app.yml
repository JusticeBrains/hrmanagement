# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: HR management

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      PGNAME: actionsdb
      PGUSER: zerah
      PGPASSWORD: actionsdb123
      PGHOST: localhost
      PGPORT: 5432
      SECRET_KEY: test-key-n)ot-12)3good
      DATABASE_URL: postgresql://zerah:actionsdb123@localhost:5432/actiondb
    services:
      postgres_main:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.PGUSER }}
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
          POSTGRES_DB: ${{ env.PGNAME }}
        ports:  
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
      env:
        DEBUG: "0"
        SECRET_KEY: ${{ env.SECRET_KEY }}
        PGUSER: ${{ env.PGUSER }}
        PGPASSWORD: ${{ env.PGPASSWORD }}
        PGHOST: ${{ env.PGHOST }}
        PGPORT: ${{ env.PGPORT }}
        PGNAME: ${{ env.PGNAME }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install Postgresql and Dependencies
      run: |
        sudo apt install python3-venv python3-dev libpq-dev postgresql postgresql-contrib nginx curl
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python manage.py test
    - name: Run migrations
      run: |
       python manage.py makemigrations && python manage.py migrate
